
JSON.stringify(this,null,'	')   >>>>>>>>>>>>>>
{
	"revision": 39321,
	"deprecated": false,
	"configChecksum": "da2780e94d5f6b41bd271420e5ced9a6",
	"intermediateChecksum": "c034762e912e14d30f1494ca73fbf920",
	"NUL": "\u0000",
	"SOH": "\u0001",
	"STX": "\u0002",
	"ETX": "\u0003",
	"EOT": "\u0004",
	"ENQ": "\u0005",
	"ACK": "\u0006",
	"BEL": "\u0007",
	"BS": "\u0008",
	"TAB": "\u0009",
	"LF": "\u000a",
	"VT": "\u000b",
	"FF": "\u000c",
	"CR": "\u000d",
	"SO": "\u000e",
	"SI": "\u000f",
	"DLE": "\u0010",
	"DC1": "\u0011",
	"DC2": "\u0012",
	"DC3": "\u0013",
	"DC4": "\u0014",
	"NAK": "\u0015",
	"SYN": "\u0016",
	"ETB": "\u0017",
	"CAN": "\u0018",
	"EM": "\u0019",
	"SUB": "\u001a",
	"ESC": "\u001b",
	"FS": "\u001c",
	"GS": "\u001d",
	"RS": "\u001e",
	"US": "\u001f",
	"EOL": "\u000d\u000a",
	"SP": " ",
	"PATH_SEPARATOR": "\\",
	"IN": 0,
	"MM": 1,
	"ORIGINAL_UNIT": -1,
	"DEG": 57.29577951308232,
	"PLANE_XY": 0,
	"PLANE_ZX": 1,
	"PLANE_YZ": 2,
	"X": 0,
	"Y": 1,
	"Z": 2,
	"TYPE_MILLING": 0,
	"TYPE_TURNING": 1,
	"TYPE_WIRE": 2,
	"TYPE_JET": 3,
	"CAPABILITY_MILLING": 1,
	"CAPABILITY_TURNING": 2,
	"CAPABILITY_WIRE": 4,
	"CAPABILITY_SETUP_SHEET": 8,
	"CAPABILITY_INTERMEDIATE": 16,
	"CAPABILITY_JET": 32,
	"JET_MODE_THROUGH": 0,
	"JET_MODE_ETCHING": 1,
	"JET_MODE_VAPORIZE": 2,
	"SPINDLE_PRIMARY": 0,
	"SPINDLE_SECONDARY": 1,
	"FEED_PER_MINUTE": 0,
	"FEED_PER_REVOLUTION": 1,
	"SPINDLE_CONSTANT_SPINDLE_SPEED": 0,
	"SPINDLE_CONSTANT_SURFACE_SPEED": 1,
	"TOOL_AXIS_X": 0,
	"TOOL_AXIS_Y": 1,
	"TOOL_AXIS_Z": 2,
	"RADIUS_COMPENSATION_OFF": 0,
	"RADIUS_COMPENSATION_LEFT": 1,
	"RADIUS_COMPENSATION_RIGHT": 2,
	"COOLANT_OFF": 0,
	"COOLANT_FLOOD": 1,
	"COOLANT_MIST": 2,
	"COOLANT_TOOL": 3,
	"COOLANT_THROUGH_TOOL": 3,
	"COOLANT_AIR": 4,
	"COOLANT_AIR_THROUGH_TOOL": 5,
	"COOLANT_SUCTION": 6,
	"COOLANT_FLOOD_MIST": 7,
	"COOLANT_FLOOD_THROUGH_TOOL": 8,
	"EULER_XZX_S": 0,
	"EULER_YXY_S": 1,
	"EULER_ZYZ_S": 2,
	"EULER_XZX_R": 3,
	"EULER_YXY_R": 4,
	"EULER_ZYZ_R": 5,
	"EULER_XZY_S": 6,
	"EULER_YXZ_S": 7,
	"EULER_ZYX_S": 8,
	"EULER_YZX_R": 9,
	"EULER_ZXY_R": 10,
	"EULER_XYZ_R": 11,
	"EULER_XYX_S": 12,
	"EULER_YZY_S": 13,
	"EULER_ZXZ_S": 14,
	"EULER_XYX_R": 15,
	"EULER_YZY_R": 16,
	"EULER_ZXZ_R": 17,
	"EULER_XYZ_S": 18,
	"EULER_YZX_S": 19,
	"EULER_ZXY_S": 20,
	"EULER_ZYX_R": 21,
	"EULER_XZY_R": 22,
	"EULER_YXZ_R": 23,
	"MATERIAL_UNSPECIFIED": 0,
	"MATERIAL_HSS": 1,
	"MATERIAL_TI_COATED": 2,
	"MATERIAL_CARBIDE": 3,
	"MATERIAL_CERAMICS": 4,
	"TOOL_UNSPECIFIED": 0,
	"TOOL_DRILL": 1,
	"TOOL_DRILL_CENTER": 2,
	"TOOL_DRILL_SPOT": 3,
	"TOOL_DRILL_BLOCK": 4,
	"TOOL_MILLING_END_FLAT": 5,
	"TOOL_MILLING_END_BALL": 6,
	"TOOL_MILLING_END_BULLNOSE": 7,
	"TOOL_MILLING_CHAMFER": 8,
	"TOOL_MILLING_FACE": 9,
	"TOOL_MILLING_SLOT": 10,
	"TOOL_MILLING_RADIUS": 11,
	"TOOL_MILLING_DOVETAIL": 12,
	"TOOL_MILLING_TAPERED": 13,
	"TOOL_MILLING_LOLLIPOP": 14,
	"TOOL_TAP_RIGHT_HAND": 15,
	"TOOL_TAP_LEFT_HAND": 16,
	"TOOL_REAMER": 17,
	"TOOL_BORING_BAR": 18,
	"TOOL_COUNTER_BORE": 19,
	"TOOL_COUNTER_SINK": 20,
	"TOOL_HOLDER_ONLY": 21,
	"TOOL_TURNING_GENERAL": 22,
	"TOOL_TURNING_THREADING": 23,
	"TOOL_TURNING_GROOVING": 24,
	"TOOL_TURNING_BORING": 25,
	"TOOL_TURNING_CUSTOM": 26,
	"TOOL_PROBE": 27,
	"TOOL_WIRE": 28,
	"TOOL_WATER_JET": 29,
	"TOOL_LASER_CUTTER": 30,
	"TOOL_WELDER": 31,
	"TOOL_GRINDER": 32,
	"TOOL_MILLING_FORM": 33,
	"TOOL_ROTARY_BROACH": 34,
	"TOOL_SLOT_BROACH": 35,
	"TOOL_PLASMA_CUTTER": 36,
	"TOOL_MARKER": 37,
	"TOOL_COMPENSATION_INSERT_CENTER": 0,
	"TOOL_COMPENSATION_TIP": 1,
	"TOOL_COMPENSATION_TIP_CENTER": 2,
	"TOOL_COMPENSATION_TIP_TANGENT": 3,
	"TURNING_INSERT_USER_DEFINED": 0,
	"TURNING_INSERT_ISO_A": 1,
	"TURNING_INSERT_ISO_B": 2,
	"TURNING_INSERT_ISO_C": 3,
	"TURNING_INSERT_ISO_D": 4,
	"TURNING_INSERT_ISO_E": 5,
	"TURNING_INSERT_ISO_H": 6,
	"TURNING_INSERT_ISO_K": 7,
	"TURNING_INSERT_ISO_L": 8,
	"TURNING_INSERT_ISO_M": 9,
	"TURNING_INSERT_ISO_O": 10,
	"TURNING_INSERT_ISO_P": 11,
	"TURNING_INSERT_ISO_R": 12,
	"TURNING_INSERT_ISO_S": 13,
	"TURNING_INSERT_ISO_T": 14,
	"TURNING_INSERT_ISO_V": 15,
	"TURNING_INSERT_ISO_W": 16,
	"HOLDER_NONE": 0,
	"HOLDER_ISO_A": 1,
	"HOLDER_ISO_B": 2,
	"HOLDER_ISO_C": 3,
	"HOLDER_ISO_D": 4,
	"HOLDER_ISO_E": 5,
	"HOLDER_ISO_F": 6,
	"HOLDER_ISO_G": 7,
	"HOLDER_ISO_H": 8,
	"HOLDER_ISO_J": 9,
	"HOLDER_ISO_K": 10,
	"HOLDER_ISO_L": 11,
	"HOLDER_ISO_M": 12,
	"HOLDER_ISO_N": 13,
	"HOLDER_ISO_P": 14,
	"HOLDER_ISO_Q": 15,
	"HOLDER_ISO_R": 16,
	"HOLDER_ISO_S": 17,
	"HOLDER_ISO_T": 18,
	"HOLDER_ISO_U": 19,
	"HOLDER_ISO_V": 20,
	"HOLDER_ISO_W": 21,
	"HOLDER_ISO_Y": 22,
	"HOLDER_OFFSET_PROFILE": 23,
	"HOLDER_STRAIGHT_PROFILE": 24,
	"HAS_PARAMETER": 1,
	"HAS_RAPID": 2,
	"HAS_LINEAR": 4,
	"HAS_RAPID_5D": 8,
	"HAS_LINEAR_5D": 16,
	"HAS_MULTIAXIS": 24,
	"HAS_DWELL": 32,
	"HAS_CIRCULAR_CW": 64,
	"HAS_CIRCULAR_CCW": 128,
	"HAS_CIRCULAR": 192,
	"HAS_CYCLE": 256,
	"HAS_WELL_KNOWN_COMMAND": 512,
	"HAS_MACHINE_COMMAND": 1024,
	"HAS_SPINDLE_SPEED": 2048,
	"HAS_COOLANT": 4096,
	"HAS_SPLINE": 8192,
	"HAS_COMMENT": 16384,
	"RECORD_INVALID": 0,
	"RECORD_TOOL_CHANGE": 1,
	"RECORD_WELL_KNOWN_COMMAND": 2,
	"RECORD_MACHINE_COMMAND": 3,
	"RECORD_SPINDLE_SPEED": 4,
	"RECORD_COOLANT": 5,
	"RECORD_PARAMETER": 6,
	"RECORD_LINEAR": 7,
	"RECORD_LINEAR_5D": 8,
	"RECORD_CIRCULAR": 9,
	"RECORD_SPLINE": 10,
	"RECORD_DWELL": 11,
	"RECORD_CYCLE": 12,
	"RECORD_CYCLE_OFF": 13,
	"RECORD_COMMENT": 14,
	"RECORD_WIDE_COMMENT": 15,
	"RECORD_PASS_THROUGH": 16,
	"RECORD_OPERATION": 17,
	"RECORD_OPERATION_END": 18,
	"COMMAND_STOP": 1,
	"COMMAND_OPTIONAL_STOP": 2,
	"COMMAND_END": 3,
	"COMMAND_SPINDLE_CLOCKWISE": 4,
	"COMMAND_SPINDLE_COUNTERCLOCKWISE": 5,
	"COMMAND_START_SPINDLE": 6,
	"COMMAND_STOP_SPINDLE": 7,
	"COMMAND_ORIENTATE_SPINDLE": 8,
	"COMMAND_LOAD_TOOL": 9,
	"COMMAND_COOLANT_ON": 10,
	"COMMAND_COOLANT_OFF": 11,
	"COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION": 12,
	"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION": 13,
	"COMMAND_ACTIVATE_SPEED_FEED_SYNCHORNIZATION": 12,
	"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHORNIZATION": 13,
	"COMMAND_LOCK_MULTI_AXIS": 14,
	"COMMAND_UNLOCK_MULTI_AXIS": 15,
	"COMMAND_EXACT_STOP": 16,
	"COMMAND_START_CHIP_TRANSPORT": 17,
	"COMMAND_STOP_CHIP_TRANSPORT": 18,
	"COMMAND_OPEN_DOOR": 19,
	"COMMAND_CLOSE_DOOR": 20,
	"COMMAND_BREAK_CONTROL": 21,
	"COMMAND_TOOL_MEASURE": 22,
	"COMMAND_CALIBRATE": 23,
	"COMMAND_VERIFY": 24,
	"COMMAND_CLEAN": 25,
	"COMMAND_ALARM": 26,
	"COMMAND_ALERT": 27,
	"COMMAND_CHANGE_PALLET": 28,
	"COMMAND_POWER_ON": 29,
	"COMMAND_POWER_OFF": 30,
	"MOVEMENT_RAPID": 0,
	"MOVEMENT_LEAD_IN": 1,
	"MOVEMENT_CUTTING": 2,
	"MOVEMENT_LEAD_OUT": 3,
	"MOVEMENT_LINK_TRANSITION": 4,
	"MOVEMENT_BRIDGING": 4,
	"MOVEMENT_LINK_DIRECT": 5,
	"MOVEMENT_RAMP_HELIX": 6,
	"MOVEMENT_PIERCE_CIRCULAR": 6,
	"MOVEMENT_RAMP_PROFILE": 7,
	"MOVEMENT_PIERCE_PROFILE": 7,
	"MOVEMENT_RAMP_ZIG_ZAG": 8,
	"MOVEMENT_PIERCE_LINEAR": 8,
	"MOVEMENT_RAMP": 9,
	"MOVEMENT_PLUNGE": 10,
	"MOVEMENT_PIERCE": 10,
	"MOVEMENT_PREDRILL": 11,
	"MOVEMENT_EXTENDED": 12,
	"MOVEMENT_REDUCED": 13,
	"MOVEMENT_FINISH_CUTTING": 14,
	"MOVEMENT_HIGH_FEED": 15,
	"PARAMETER_SPATIAL": 0,
	"PARAMETER_ANGLE": 1,
	"PARAMETER_ENUM": 2,
	"HIGH_FEED_NO_MAPPING": 0,
	"HIGH_FEED_MAP_MULTI": 1,
	"HIGH_FEED_MAP_XY_Z": 2,
	"HIGH_FEED_MAP_ANGULAR": 3,
	"HIGH_FEED_MAP_CLEARANCE": 4,
	"HIGH_FEED_MAP_ANY": 5,
	"FLAG_CYCLE_REPEAT_PASS": 1,
	"description": "This is the post-processor description. Lorem Ipsum dolorem sit amet. ",
	"vendor": "Autoscan",
	"vendorUrl": "http://autoscaninc.com",
	"legal": "",
	"unit": 0,
	"programName": "paddle-byHsmWorks",
	"programComment": "",
	"programNameIsInteger": false,
	"configurationType": "gcode",
	"debugMode": false,
	"preventPost": false,
	"filename": "",
	"extension": "nc",
	"mimetype": "text/plain",
	"keywords": "",
	"version": "1.0",
	"certificationLevel": 2,
	"minimumRevision": 1,
	"abortOnDeprecation": true,
	"capabilities": 1,
	"tolerance": 0.002,
	"maximumSpindleSpeed": 1000000,
	"maximumFeedrate": 1000000,
	"minimumChordLength": 0.01,
	"minimumCircularRadius": 0.01,
	"maximumCircularRadius": 1000,
	"minimumCircularSweep": 0.00017453292519943296,
	"maximumCircularSweep": 3.141592653589793,
	"allowMachineChangeOnSection": false,
	"allowHelicalMoves": true,
	"allowSpiralMoves": false,
	"allowOptionalCode": false,
	"highFeedMapping": 0,
	"highFeedrate": 0,
	"properties": {
		"writeMachine": true,
		"writeTools": true,
		"useG28": false,
		"useM6": false,
		"preloadTool": false,
		"showSequenceNumbers": false,
		"sequenceNumberStart": 10,
		"sequenceNumberIncrement": 5,
		"optionalStop": true,
		"separateWordsWithSpace": true,
		"useRadius": true,
		"dwellInSeconds": true,
		"programComment": "",
		"programName": "paddle-byHsmWorks",
		"unit": 0
	},
	"outputMachineABC": true,
	"tool": {},
	"cycle": {},
	"cycleExpanded": {},
	"spindleAxis": 2,
	"feedrate": 0,
	"machineConfiguration": {},
	"machineParameters": {
		"spindleOrientation": 0,
		"chipBreakingDistance": 0.004,
		"drillingSafeDistance": 0.08
	},
	"permittedCommentChars": " ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,=_-",
	"mapCoolantTable": {
		"values": [
			9,
			8,
			7
		],
		"value": 0,
		"unchanged": "",
		"errorMessage": "Invalid coolant mode"
	},
	"nFormat": {},
	"gFormat": {},
	"mFormat": {},
	"hFormat": {},
	"pFormat": {},
	"xyzFormat": {},
	"rFormat": {},
	"abcFormat": {},
	"feedFormat": {},
	"toolFormat": {},
	"rpmFormat": {},
	"secFormat": {},
	"milliFormat": {},
	"taperFormat": {},
	"xOutput": {},
	"yOutput": {},
	"zOutput": {},
	"aOutput": {},
	"bOutput": {},
	"cOutput": {},
	"feedOutput": {},
	"sOutput": {},
	"pOutput": {},
	"iOutput": {},
	"jOutput": {},
	"kOutput": {},
	"gMotionModal": {},
	"gPlaneModal": {},
	"gAbsIncModal": {},
	"gFeedModeModal": {},
	"gUnitModal": {},
	"gCycleModal": {},
	"gRetractModal": {},
	"WARNING_WORK_OFFSET": 0,
	"closestABC": false,
	"pendingRadiusCompensation": -1,
	"mapCommand": {
		"COMMAND_STOP": 0,
		"COMMAND_OPTIONAL_STOP": 1,
		"COMMAND_END": 2,
		"COMMAND_SPINDLE_CLOCKWISE": 3,
		"COMMAND_SPINDLE_COUNTERCLOCKWISE": 4,
		"COMMAND_STOP_SPINDLE": 5,
		"COMMAND_ORIENTATE_SPINDLE": 19,
		"COMMAND_LOAD_TOOL": 6,
		"COMMAND_COOLANT_ON": 8,
		"COMMAND_COOLANT_OFF": 9
	},
	"mapWorkOrigin": true,
	"mapToWCS": true,
	"milling": true
}

JSON.stringify(this.prototype,null,'	')   >>>>>>>>>>>>>>
undefined

JSON.stringify(getMethods(this),null,'	')   >>>>>>>>>>>>>>
[
	"getCoolantName",
	"getMaterialName",
	"getToolTypeName",
	"isWellKnownCommand",
	"getCommandStringId",
	"getMovementStringId",
	"getMovementStringIdForJet",
	"Parameter",
	"Table",
	"Format",
	"createFormat",
	"Modal",
	"setOnChange",
	"createModal",
	"createModalGroup",
	"IdGenerator",
	"Template",
	"Variable",
	"createVariable",
	"IncrementalVariable",
	"createIncrementalVariable",
	"CyclicVariable",
	"ReferenceVariable",
	"createReferenceVariable",
	"clamp",
	"concatWords",
	"UserDefinedProperties",
	"mergeProperties",
	"parseFloatSafe",
	"trim",
	"getAggregateConfiguration",
	"EvaluateDelayed",
	"isFirstSection",
	"isLastSection",
	"toDeg",
	"toRad",
	"getAsDeg",
	"getAsRad",
	"sqr",
	"spatial",
	"getUnitSymbolAsString",
	"toUnit",
	"toPreciseUnit",
	"parseSpatial",
	"getPlane",
	"getISOPlane",
	"toHex",
	"toChar",
	"getQuadrant",
	"conditional",
	"validate",
	"validateInternal",
	"debug",
	"dumpCycle",
	"isWorkpieceDefined",
	"getInverseTime",
	"cycleNotSupported",
	"isMilling",
	"isTurning",
	"isJet",
	"getToolpathContent",
	"onExpandedRapid",
	"ExpandCycle",
	"onExpandedLinear",
	"createMachineConfiguration",
	"getAxisAsText",
	"getMachineConfigurationAsTextYesNo",
	"getMachineConfigurationAsText",
	"repositionToCycleClearance",
	"expandDrilling",
	"expandCounterBoring",
	"expandChipBreaking",
	"expandDeepDrilling",
	"expandBreakThroughDrilling",
	"expandGunDrilling",
	"expandTappingWithChipBreaking",
	"expandTapping",
	"expandReaming",
	"expandBoring",
	"expandStopBoring",
	"expandManualBoring",
	"expandBackBoring",
	"expandFineBoring",
	"expandCyclePoint",
	"onClearCycleParameters",
	"onCycleParameter",
	"validifyCycleParameters",
	"onMachine",
	"onOpen",
	"onClose",
	"onTerminate",
	"onPower",
	"onSpindleSpeed",
	"onRadiusCompensation",
	"onRewindMachine",
	"onCoolant",
	"isWellKnownCycle",
	"onDeprecated",
	"initialize",
	"onCycle",
	"onCyclePoint",
	"onCycleEnd",
	"onParameter",
	"onPassThrough",
	"onComment",
	"onMachiningDistance",
	"onRapid",
	"onLinear",
	"onRapid5D",
	"onLinear5D",
	"onCircular",
	"onSpline",
	"onSisterTooling",
	"onDwell",
	"onCommand",
	"onCommandDefaultHandler",
	"getCurrentNCLocation",
	"onUnsupportedCoolant",
	"canIgnoreCommand",
	"onUnsupportedCommand",
	"onOrientateSpindle",
	"onMachineCommand",
	"onSection",
	"onSectionEnd",
	"isAlpha",
	"isAlphaNum",
	"getFolderPath",
	"replaceExtension",
	"makeOutputPath",
	"createAxis",
	"CoolantState",
	"range",
	"__",
	"onCorruption",
	"interval",
	"flatten",
	"isSameDirection",
	"movementToString",
	"writeBlock",
	"writeComment",
	"getMethods",
	"reconstruct",
	"forceXYZ",
	"forceABC",
	"forceAny",
	"forceWorkPlane",
	"setWorkPlane",
	"getWorkPlaneMachineABC",
	"getCommonCycle",
	"reportPosition",
	"includeFile",
	"steadyRest_engage",
	"onAction"
]

JSON.stringify(this.keys,null,'	')   >>>>>>>>>>>>>>
undefined

JSON.stringify(reconstruct(this),null,'	')   >>>>>>>>>>>>>>
{
	"revision": "39321",
	"deprecated": "false",
	"configChecksum": "\"da2780e94d5f6b41bd271420e5ced9a6\"",
	"intermediateChecksum": "\"c034762e912e14d30f1494ca73fbf920\"",
	"NUL": "\"\\u0000\"",
	"SOH": "\"\\u0001\"",
	"STX": "\"\\u0002\"",
	"ETX": "\"\\u0003\"",
	"EOT": "\"\\u0004\"",
	"ENQ": "\"\\u0005\"",
	"ACK": "\"\\u0006\"",
	"BEL": "\"\\u0007\"",
	"BS": "\"\\u0008\"",
	"TAB": "\"\\u0009\"",
	"LF": "\"\\u000a\"",
	"VT": "\"\\u000b\"",
	"FF": "\"\\u000c\"",
	"CR": "\"\\u000d\"",
	"SO": "\"\\u000e\"",
	"SI": "\"\\u000f\"",
	"DLE": "\"\\u0010\"",
	"DC1": "\"\\u0011\"",
	"DC2": "\"\\u0012\"",
	"DC3": "\"\\u0013\"",
	"DC4": "\"\\u0014\"",
	"NAK": "\"\\u0015\"",
	"SYN": "\"\\u0016\"",
	"ETB": "\"\\u0017\"",
	"CAN": "\"\\u0018\"",
	"EM": "\"\\u0019\"",
	"SUB": "\"\\u001a\"",
	"ESC": "\"\\u001b\"",
	"FS": "\"\\u001c\"",
	"GS": "\"\\u001d\"",
	"RS": "\"\\u001e\"",
	"US": "\"\\u001f\"",
	"EOL": "\"\\u000d\\u000a\"",
	"SP": "\" \"",
	"PATH_SEPARATOR": "\"\\\\\"",
	"IN": "0",
	"MM": "1",
	"ORIGINAL_UNIT": "-1",
	"DEG": "57.29577951308232",
	"PLANE_XY": "0",
	"PLANE_ZX": "1",
	"PLANE_YZ": "2",
	"X": "0",
	"Y": "1",
	"Z": "2",
	"TYPE_MILLING": "0",
	"TYPE_TURNING": "1",
	"TYPE_WIRE": "2",
	"TYPE_JET": "3",
	"CAPABILITY_MILLING": "1",
	"CAPABILITY_TURNING": "2",
	"CAPABILITY_WIRE": "4",
	"CAPABILITY_SETUP_SHEET": "8",
	"CAPABILITY_INTERMEDIATE": "16",
	"CAPABILITY_JET": "32",
	"JET_MODE_THROUGH": "0",
	"JET_MODE_ETCHING": "1",
	"JET_MODE_VAPORIZE": "2",
	"SPINDLE_PRIMARY": "0",
	"SPINDLE_SECONDARY": "1",
	"FEED_PER_MINUTE": "0",
	"FEED_PER_REVOLUTION": "1",
	"SPINDLE_CONSTANT_SPINDLE_SPEED": "0",
	"SPINDLE_CONSTANT_SURFACE_SPEED": "1",
	"TOOL_AXIS_X": "0",
	"TOOL_AXIS_Y": "1",
	"TOOL_AXIS_Z": "2",
	"RADIUS_COMPENSATION_OFF": "0",
	"RADIUS_COMPENSATION_LEFT": "1",
	"RADIUS_COMPENSATION_RIGHT": "2",
	"COOLANT_OFF": "0",
	"COOLANT_FLOOD": "1",
	"COOLANT_MIST": "2",
	"COOLANT_TOOL": "3",
	"COOLANT_THROUGH_TOOL": "3",
	"COOLANT_AIR": "4",
	"COOLANT_AIR_THROUGH_TOOL": "5",
	"COOLANT_SUCTION": "6",
	"COOLANT_FLOOD_MIST": "7",
	"COOLANT_FLOOD_THROUGH_TOOL": "8",
	"EULER_XZX_S": "0",
	"EULER_YXY_S": "1",
	"EULER_ZYZ_S": "2",
	"EULER_XZX_R": "3",
	"EULER_YXY_R": "4",
	"EULER_ZYZ_R": "5",
	"EULER_XZY_S": "6",
	"EULER_YXZ_S": "7",
	"EULER_ZYX_S": "8",
	"EULER_YZX_R": "9",
	"EULER_ZXY_R": "10",
	"EULER_XYZ_R": "11",
	"EULER_XYX_S": "12",
	"EULER_YZY_S": "13",
	"EULER_ZXZ_S": "14",
	"EULER_XYX_R": "15",
	"EULER_YZY_R": "16",
	"EULER_ZXZ_R": "17",
	"EULER_XYZ_S": "18",
	"EULER_YZX_S": "19",
	"EULER_ZXY_S": "20",
	"EULER_ZYX_R": "21",
	"EULER_XZY_R": "22",
	"EULER_YXZ_R": "23",
	"getCoolantName": "function getCoolantName(coolant) {switch (coolant) {case COOLANT_OFF:return localize(\"coolant off\");case COOLANT_FLOOD:return localize(\"coolant flood\");case COOLANT_MIST:return localize(\"coolant mist\");case COOLANT_THROUGH_TOOL:return localize(\"coolant through tool\");case COOLANT_AIR:return localize(\"coolant air\");case COOLANT_AIR_THROUGH_TOOL:return localize(\"coolant air through tool\");case COOLANT_SUCTION:return localize(\"coolant suction\");case COOLANT_FLOOD_MIST:return localize(\"coolant flood and mist\");case COOLANT_FLOOD_THROUGH_TOOL:return localize(\"coolant flood and through tool\");default:return localize(\"invalid coolant\");}}",
	"MATERIAL_UNSPECIFIED": "0",
	"MATERIAL_HSS": "1",
	"MATERIAL_TI_COATED": "2",
	"MATERIAL_CARBIDE": "3",
	"MATERIAL_CERAMICS": "4",
	"getMaterialName": "function getMaterialName(material) {switch (material) {case MATERIAL_UNSPECIFIED:return localize(\"unspecified\");case MATERIAL_HSS:return localize(\"high-speed steel\");case MATERIAL_TI_COATED:return localize(\"ti coated\");case MATERIAL_CARBIDE:return localize(\"carbide\");case MATERIAL_CERAMICS:return localize(\"ceramics\");default:return localize(\"invalid\");}}",
	"TOOL_UNSPECIFIED": "0",
	"TOOL_DRILL": "1",
	"TOOL_DRILL_CENTER": "2",
	"TOOL_DRILL_SPOT": "3",
	"TOOL_DRILL_BLOCK": "4",
	"TOOL_MILLING_END_FLAT": "5",
	"TOOL_MILLING_END_BALL": "6",
	"TOOL_MILLING_END_BULLNOSE": "7",
	"TOOL_MILLING_CHAMFER": "8",
	"TOOL_MILLING_FACE": "9",
	"TOOL_MILLING_SLOT": "10",
	"TOOL_MILLING_RADIUS": "11",
	"TOOL_MILLING_DOVETAIL": "12",
	"TOOL_MILLING_TAPERED": "13",
	"TOOL_MILLING_LOLLIPOP": "14",
	"TOOL_TAP_RIGHT_HAND": "15",
	"TOOL_TAP_LEFT_HAND": "16",
	"TOOL_REAMER": "17",
	"TOOL_BORING_BAR": "18",
	"TOOL_COUNTER_BORE": "19",
	"TOOL_COUNTER_SINK": "20",
	"TOOL_HOLDER_ONLY": "21",
	"TOOL_TURNING_GENERAL": "22",
	"TOOL_TURNING_THREADING": "23",
	"TOOL_TURNING_GROOVING": "24",
	"TOOL_TURNING_BORING": "25",
	"TOOL_TURNING_CUSTOM": "26",
	"TOOL_PROBE": "27",
	"TOOL_WIRE": "28",
	"TOOL_WATER_JET": "29",
	"TOOL_LASER_CUTTER": "30",
	"TOOL_WELDER": "31",
	"TOOL_GRINDER": "32",
	"TOOL_MILLING_FORM": "33",
	"TOOL_ROTARY_BROACH": "34",
	"TOOL_SLOT_BROACH": "35",
	"TOOL_PLASMA_CUTTER": "36",
	"TOOL_MARKER": "37",
	"getToolTypeName": "function getToolTypeName(type) {switch (type) {case TOOL_DRILL:return localize(\"drill\");case TOOL_DRILL_CENTER:return localize(\"center drill\");case TOOL_DRILL_SPOT:return localize(\"spot drill\");case TOOL_DRILL_BLOCK:return localize(\"block drill\");case TOOL_MILLING_END_FLAT:return localize(\"flat end mill\");case TOOL_MILLING_END_BALL:return localize(\"ball end mill\");case TOOL_MILLING_END_BULLNOSE:return localize(\"bullnose end mill\");case TOOL_MILLING_CHAMFER:return localize(\"chamfer mill\");case TOOL_MILLING_FACE:return localize(\"face mill\");case TOOL_MILLING_SLOT:return localize(\"slot mill\");case TOOL_MILLING_RADIUS:return localize(\"radius mill\");case TOOL_MILLING_DOVETAIL:return localize(\"dovetail mill\");case TOOL_MILLING_TAPERED:return localize(\"tapered mill\");case TOOL_MILLING_LOLLIPOP:return localize(\"lollipop mill\");case TOOL_TAP_RIGHT_HAND:return localize(\"right hand tap\");case TOOL_TAP_LEFT_HAND:return localize(\"left hand tap\");case TOOL_REAMER:return localize(\"reamer\");case TOOL_BORING_BAR:return localize(\"boring bar\");case TOOL_COUNTER_BORE:return localize(\"counterbore\");case TOOL_COUNTER_SINK:return localize(\"countersink\");case TOOL_HOLDER_ONLY:return localize(\"holder\");case TOOL_TURNING_GENERAL:return localize(\"general turning\");case TOOL_TURNING_THREADING:return localize(\"thread turning\");case TOOL_TURNING_GROOVING:return localize(\"groove turning\");case TOOL_TURNING_BORING:return localize(\"boring turning\");case TOOL_TURNING_CUSTOM:return localize(\"custom turning\");case TOOL_WIRE:return localize(\"wire\");case TOOL_WATER_JET:return localize(\"water jet\");case TOOL_LASER_CUTTER:return localize(\"laser cutter\");case TOOL_WELDER:return localize(\"welder\");case TOOL_GRINDER:return localize(\"grinder\");case TOOL_MILLING_FORM:return localize(\"form mill\");case TOOL_ROTARY_BROACH:return localize(\"rotary broach\");case TOOL_SLOT_BROACH:return localize(\"slot broach\");case TOOL_PLASMA_CUTTER:return localize(\"plasma cutter\");default:return localize(\"unknown tool type\");}}",
	"TOOL_COMPENSATION_INSERT_CENTER": "0",
	"TOOL_COMPENSATION_TIP": "1",
	"TOOL_COMPENSATION_TIP_CENTER": "2",
	"TOOL_COMPENSATION_TIP_TANGENT": "3",
	"TURNING_INSERT_USER_DEFINED": "0",
	"TURNING_INSERT_ISO_A": "1",
	"TURNING_INSERT_ISO_B": "2",
	"TURNING_INSERT_ISO_C": "3",
	"TURNING_INSERT_ISO_D": "4",
	"TURNING_INSERT_ISO_E": "5",
	"TURNING_INSERT_ISO_H": "6",
	"TURNING_INSERT_ISO_K": "7",
	"TURNING_INSERT_ISO_L": "8",
	"TURNING_INSERT_ISO_M": "9",
	"TURNING_INSERT_ISO_O": "10",
	"TURNING_INSERT_ISO_P": "11",
	"TURNING_INSERT_ISO_R": "12",
	"TURNING_INSERT_ISO_S": "13",
	"TURNING_INSERT_ISO_T": "14",
	"TURNING_INSERT_ISO_V": "15",
	"TURNING_INSERT_ISO_W": "16",
	"HOLDER_NONE": "0",
	"HOLDER_ISO_A": "1",
	"HOLDER_ISO_B": "2",
	"HOLDER_ISO_C": "3",
	"HOLDER_ISO_D": "4",
	"HOLDER_ISO_E": "5",
	"HOLDER_ISO_F": "6",
	"HOLDER_ISO_G": "7",
	"HOLDER_ISO_H": "8",
	"HOLDER_ISO_J": "9",
	"HOLDER_ISO_K": "10",
	"HOLDER_ISO_L": "11",
	"HOLDER_ISO_M": "12",
	"HOLDER_ISO_N": "13",
	"HOLDER_ISO_P": "14",
	"HOLDER_ISO_Q": "15",
	"HOLDER_ISO_R": "16",
	"HOLDER_ISO_S": "17",
	"HOLDER_ISO_T": "18",
	"HOLDER_ISO_U": "19",
	"HOLDER_ISO_V": "20",
	"HOLDER_ISO_W": "21",
	"HOLDER_ISO_Y": "22",
	"HOLDER_OFFSET_PROFILE": "23",
	"HOLDER_STRAIGHT_PROFILE": "24",
	"HAS_PARAMETER": "1",
	"HAS_RAPID": "2",
	"HAS_LINEAR": "4",
	"HAS_RAPID_5D": "8",
	"HAS_LINEAR_5D": "16",
	"HAS_MULTIAXIS": "24",
	"HAS_DWELL": "32",
	"HAS_CIRCULAR_CW": "64",
	"HAS_CIRCULAR_CCW": "128",
	"HAS_CIRCULAR": "192",
	"HAS_CYCLE": "256",
	"HAS_WELL_KNOWN_COMMAND": "512",
	"HAS_MACHINE_COMMAND": "1024",
	"HAS_SPINDLE_SPEED": "2048",
	"HAS_COOLANT": "4096",
	"HAS_SPLINE": "8192",
	"HAS_COMMENT": "16384",
	"RECORD_INVALID": "0",
	"RECORD_TOOL_CHANGE": "1",
	"RECORD_WELL_KNOWN_COMMAND": "2",
	"RECORD_MACHINE_COMMAND": "3",
	"RECORD_SPINDLE_SPEED": "4",
	"RECORD_COOLANT": "5",
	"RECORD_PARAMETER": "6",
	"RECORD_LINEAR": "7",
	"RECORD_LINEAR_5D": "8",
	"RECORD_CIRCULAR": "9",
	"RECORD_SPLINE": "10",
	"RECORD_DWELL": "11",
	"RECORD_CYCLE": "12",
	"RECORD_CYCLE_OFF": "13",
	"RECORD_COMMENT": "14",
	"RECORD_WIDE_COMMENT": "15",
	"RECORD_PASS_THROUGH": "16",
	"RECORD_OPERATION": "17",
	"RECORD_OPERATION_END": "18",
	"COMMAND_STOP": "1",
	"COMMAND_OPTIONAL_STOP": "2",
	"COMMAND_END": "3",
	"COMMAND_SPINDLE_CLOCKWISE": "4",
	"COMMAND_SPINDLE_COUNTERCLOCKWISE": "5",
	"COMMAND_START_SPINDLE": "6",
	"COMMAND_STOP_SPINDLE": "7",
	"COMMAND_ORIENTATE_SPINDLE": "8",
	"COMMAND_LOAD_TOOL": "9",
	"COMMAND_COOLANT_ON": "10",
	"COMMAND_COOLANT_OFF": "11",
	"COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION": "12",
	"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION": "13",
	"COMMAND_ACTIVATE_SPEED_FEED_SYNCHORNIZATION": "12",
	"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHORNIZATION": "13",
	"COMMAND_LOCK_MULTI_AXIS": "14",
	"COMMAND_UNLOCK_MULTI_AXIS": "15",
	"COMMAND_EXACT_STOP": "16",
	"COMMAND_START_CHIP_TRANSPORT": "17",
	"COMMAND_STOP_CHIP_TRANSPORT": "18",
	"COMMAND_OPEN_DOOR": "19",
	"COMMAND_CLOSE_DOOR": "20",
	"COMMAND_BREAK_CONTROL": "21",
	"COMMAND_TOOL_MEASURE": "22",
	"COMMAND_CALIBRATE": "23",
	"COMMAND_VERIFY": "24",
	"COMMAND_CLEAN": "25",
	"COMMAND_ALARM": "26",
	"COMMAND_ALERT": "27",
	"COMMAND_CHANGE_PALLET": "28",
	"COMMAND_POWER_ON": "29",
	"COMMAND_POWER_OFF": "30",
	"isWellKnownCommand": "function isWellKnownCommand(command) {switch (command) {case COMMAND_STOP:case COMMAND_OPTIONAL_STOP:case COMMAND_END:case COMMAND_SPINDLE_CLOCKWISE:case COMMAND_SPINDLE_COUNTERCLOCKWISE:case COMMAND_START_SPINDLE:case COMMAND_STOP_SPINDLE:case COMMAND_ORIENTATE_SPINDLE:case COMMAND_LOAD_TOOL:case COMMAND_COOLANT_ON:case COMMAND_COOLANT_OFF:case COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION:case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION:case COMMAND_ACTIVATE_SPEED_FEED_SYNCHORNIZATION:case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHORNIZATION:case COMMAND_LOCK_MULTI_AXIS:case COMMAND_UNLOCK_MULTI_AXIS:case COMMAND_EXACT_STOP:case COMMAND_START_CHIP_TRANSPORT:case COMMAND_STOP_CHIP_TRANSPORT:case COMMAND_OPEN_DOOR:case COMMAND_CLOSE_DOOR:case COMMAND_BREAK_CONTROL:case COMMAND_TOOL_MEASURE:case COMMAND_CALIBRATE:case COMMAND_VERIFY:case COMMAND_CLEAN:case COMMAND_ALARM:case COMMAND_ALERT:case COMMAND_CHANGE_PALLET:case COMMAND_POWER_ON:case COMMAND_POWER_OFF:return true;default:return false;}}",
	"getCommandStringId": "function getCommandStringId(command) {switch (command) {case COMMAND_STOP:return \"COMMAND_STOP\";case COMMAND_OPTIONAL_STOP:return \"COMMAND_OPTIONAL_STOP\";case COMMAND_END:return \"COMMAND_END\";case COMMAND_SPINDLE_CLOCKWISE:return \"COMMAND_SPINDLE_CLOCKWISE\";case COMMAND_SPINDLE_COUNTERCLOCKWISE:return \"COMMAND_SPINDLE_COUNTERCLOCKWISE\";case COMMAND_START_SPINDLE:return \"COMMAND_START_SPINDLE\";case COMMAND_STOP_SPINDLE:return \"COMMAND_STOP_SPINDLE\";case COMMAND_ORIENTATE_SPINDLE:return \"COMMAND_ORIENTATE_SPINDLE\";case COMMAND_LOAD_TOOL:return \"COMMAND_LOAD_TOOL\";case COMMAND_COOLANT_ON:return \"COMMAND_COOLANT_ON\";case COMMAND_COOLANT_OFF:return \"COMMAND_COOLANT_OFF\";case COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION:return \"COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION\";case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION:return \"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION\";case COMMAND_ACTIVATE_SPEED_FEED_SYNCHORNIZATION:return \"COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION\";case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHORNIZATION:return \"COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION\";case COMMAND_LOCK_MULTI_AXIS:return \"COMMAND_LOCK_MULTI_AXIS\";case COMMAND_UNLOCK_MULTI_AXIS:return \"COMMAND_UNLOCK_MULTI_AXIS\";case COMMAND_EXACT_STOP:return \"COMMAND_EXACT_STOP\";case COMMAND_START_CHIP_TRANSPORT:return \"COMMAND_START_CHIP_TRANSPORT\";case COMMAND_STOP_CHIP_TRANSPORT:return \"COMMAND_STOP_CHIP_TRANSPORT\";case COMMAND_OPEN_DOOR:return \"COMMAND_OPEN_DOOR\";case COMMAND_CLOSE_DOOR:return \"COMMAND_CLOSE_DOOR\";case COMMAND_BREAK_CONTROL:return \"COMMAND_BREAK_CONTROL\";case COMMAND_TOOL_MEASURE:return \"COMMAND_TOOL_MEASURE\";case COMMAND_CALIBRATE:return \"COMMAND_CALIBRATE\";case COMMAND_VERIFY:return \"COMMAND_VERIFY\";case COMMAND_CLEAN:return \"COMMAND_CLEAN\";case COMMAND_ALARM:return \"COMMAND_ALARM\";case COMMAND_ALERT:return \"COMMAND_ALERT\";case COMMAND_CHANGE_PALLET:return \"COMMAND_CHANGE_PALLET\";case COMMAND_POWER_ON:return \"COMMAND_POWER_ON\";case COMMAND_POWER_OFF:return \"COMMAND_POWER_OFF\";default:return String(command);}}",
	"MOVEMENT_RAPID": "0",
	"MOVEMENT_LEAD_IN": "1",
	"MOVEMENT_CUTTING": "2",
	"MOVEMENT_LEAD_OUT": "3",
	"MOVEMENT_LINK_TRANSITION": "4",
	"MOVEMENT_BRIDGING": "4",
	"MOVEMENT_LINK_DIRECT": "5",
	"MOVEMENT_RAMP_HELIX": "6",
	"MOVEMENT_PIERCE_CIRCULAR": "6",
	"MOVEMENT_RAMP_PROFILE": "7",
	"MOVEMENT_PIERCE_PROFILE": "7",
	"MOVEMENT_RAMP_ZIG_ZAG": "8",
	"MOVEMENT_PIERCE_LINEAR": "8",
	"MOVEMENT_RAMP": "9",
	"MOVEMENT_PLUNGE": "10",
	"MOVEMENT_PIERCE": "10",
	"MOVEMENT_PREDRILL": "11",
	"MOVEMENT_EXTENDED": "12",
	"MOVEMENT_REDUCED": "13",
	"MOVEMENT_FINISH_CUTTING": "14",
	"MOVEMENT_HIGH_FEED": "15",
	"getMovementStringId": "function getMovementStringId(movement) {switch (movement) {case MOVEMENT_RAPID:return \"rapid\";case MOVEMENT_LEAD_IN:return \"lead in\";case MOVEMENT_CUTTING:return \"cutting\";case MOVEMENT_LEAD_OUT:return \"lead out\";case MOVEMENT_LINK_TRANSITION:return \"transition\";case MOVEMENT_LINK_DIRECT:return \"direct\";case MOVEMENT_RAMP_HELIX:return \"helix ramp\";case MOVEMENT_RAMP_PROFILE:return \"profile ramp\";case MOVEMENT_RAMP_ZIG_ZAG:return \"zigzag ramp\";case MOVEMENT_RAMP:return \"ramp\";case MOVEMENT_PLUNGE:return \"plunge\";case MOVEMENT_PREDRILL:return \"predrill\";case MOVEMENT_EXTENDED:return \"extended\";case MOVEMENT_REDUCED:return \"reduced\";case MOVEMENT_FINISH_CUTTING:return \"finish cut\";case MOVEMENT_HIGH_FEED:return \"high feed\";default:return String(movement);}}",
	"getMovementStringIdForJet": "function getMovementStringIdForJet(movement) {switch (movement) {case MOVEMENT_RAPID:return \"rapid\";case MOVEMENT_LEAD_IN:return \"lead in\";case MOVEMENT_CUTTING:return \"cutting\";case MOVEMENT_LEAD_OUT:return \"lead out\";case MOVEMENT_LINK_TRANSITION:return \"bridging\";case MOVEMENT_LINK_DIRECT:return \"direct\";case MOVEMENT_RAMP_HELIX:return \"circular pierce\";case MOVEMENT_RAMP_PROFILE:return \"profile pierce\";case MOVEMENT_RAMP_ZIG_ZAG:return \"linear pierce\";case MOVEMENT_RAMP:return \"pierce\";case MOVEMENT_PLUNGE:return \"pierce\";case MOVEMENT_PREDRILL:return \"predrill\";case MOVEMENT_EXTENDED:return \"extended\";case MOVEMENT_REDUCED:return \"reduced\";case MOVEMENT_FINISH_CUTTING:return \"finish cut\";case MOVEMENT_HIGH_FEED:return \"high feed\";default:return String(movement);}}",
	"PARAMETER_SPATIAL": "0",
	"PARAMETER_ANGLE": "1",
	"PARAMETER_ENUM": "2",
	"Parameter": "function Parameter(specifiers) {if (!(this instanceof arguments.callee)) {throw new Error(localize(\"Parameter constructor called as a function.\"));}for (var name in specifiers) {switch (name) {case \"value\":case \"type\":case \"enum\":case \"shortDescription\":case \"description\":this[name] = specifiers[name];break;default:warning(subst(localize(\"Unsupported Parameter specifier '%1'.\"), name));}}}",
	"Table": "function Table(values, specifiers, errorMessage) {if (!(this instanceof arguments.callee)) {throw new Error(localize(\"Table constructor called as a function.\"));}var initial = undefined;var force = false;var unchanged = \"\";for (var name in specifiers) {switch (name) {case \"initial\":initial = specifiers[name];break;case \"force\":force = specifiers[name];break;case \"unchanged\":unchanged = specifiers[name];break;default:warning(subst(localize(\"Unsupported Table specifier '%1'.\"), name));}}if (!(values instanceof Object)) {error(localize(\"Table constructor expecting array as first argument.\"));}if (initial && (initial < 0 || initial >= values.length)) {error(localize(\"Invalid initial value for table.\"));}this.values = values;this.value = initial;this.unchanged = unchanged;this.errorMessage = errorMessage != undefined ? errorMessage : \"Invalid table index.\";if (force) {this.lookup = function (index) {if (index < this.values.length) {return this.values[index];}debug(\"Table.lookup(): failed due to invalid index: \" + index);error(this.errorMessage);return undefined;};} else {this.lookup = function (index) {if (index < this.values.length) {if (index != this.value) {this.value = index;return this.values[index];}return this.unchanged;}debug(\"Table.lookup(): failed due to invalid index: \" + index);error(this.errorMessage);return undefined;};}}",
	"Format": "function Format(specifiers) {if (!(this instanceof arguments.callee)) {throw new Error(\"Format constructor called as a function.\");}this.formatNumber = createFormat(specifiers);this.minimumValue = this.formatNumber.getMinimumValue();}",
	"createFormat": "function createFormat(specifiers) {var width = 0;var forceSign = false;var forceDecimal = false;var zeropad = false;var decimals = 6;var trimZeroDecimals = true;var trimLeadZero = false;var decimalSymbol = \".\";var cyclicLimit = 0;var cyclicSign = 0;var scale = 1;var offset = 0;var prefix = \"\";var suffix = \"\";if (specifiers && specifiers.inherit && (specifiers.inherit instanceof FormatNumber || specifiers.inherit instanceof Format)) {var inherit = specifiers.inherit;if (inherit instanceof Format) {inherit = inherit.formatNumber;}if (inherit) {decimals = inherit.getNumberOfDecimals();trimZeroDecimals = inherit.getTrimZeroDecimals();trimLeadZero = inherit.getTrimLeadZero();width = inherit.getWidth();forceSign = inherit.getForceSign();forceDecimal = inherit.getForceDecimal();decimalSymbol = inherit.getDecimalSymbol();zeropad = inherit.getZeroPad();cyclicLimit = inherit.getCyclicLimit();if (cyclicLimit > 0) {cyclicSign = inherit.getCyclicSign();}scale = inherit.getScale();offset = inherit.getOffset();prefix = inherit.getPrefix();suffix = inherit.getSuffix();}}for (var name in specifiers) {switch (name) {case \"decimals\":decimals = specifiers[name];break;case \"trim\":trimZeroDecimals = specifiers[name];break;case \"trimLeadZero\":trimLeadZero = specifiers[name];break;case \"forceSign\":forceSign = specifiers[name];break;case \"forceDecimal\":forceDecimal = specifiers[name];break;case \"zeropad\":zeropad = specifiers[name];break;case \"width\":width = specifiers[name];break;case \"separator\":decimalSymbol = specifiers[name];break;case \"cyclicLimit\":cyclicLimit = specifiers[name];break;case \"cyclicSign\":cyclicSign = specifiers[name];break;case \"scale\":scale = specifiers[name];break;case \"offset\":offset = specifiers[name];break;case \"prefix\":prefix = specifiers[name];break;case \"suffix\":suffix = specifiers[name];break;default:warning(subst(localize(\"Unsupported format specifier '%1'.\"), name));}}var formatNumber = new FormatNumber;formatNumber.setNumberOfDecimals(decimals);formatNumber.setTrimZeroDecimals(trimZeroDecimals);formatNumber.setTrimLeadZero(trimLeadZero);formatNumber.setWidth(width);formatNumber.setForceSign(forceSign);formatNumber.setForceDecimal(forceDecimal);formatNumber.setDecimalSymbol(decimalSymbol);formatNumber.setZeroPad(zeropad);formatNumber.setCyclicMapping(cyclicLimit, cyclicSign);if (scale != 1) {formatNumber.setScale(scale);}if (offset != 0) {formatNumber.setOffset(offset);}if (prefix) {formatNumber.setPrefix(prefix);}if (suffix) {formatNumber.setSuffix(suffix);}return formatNumber;}",
	"Modal": "function Modal(specifiers, modalFormat) {if (!(this instanceof arguments.callee)) {throw new Error(\"Modal constructor called as a function.\");}if (modalFormat) {this.impl = createModal(specifiers, modalFormat);this.format = function (value) {return this.impl.format(value);};} else {this.format = function (value) {if (value == this.current) {return \"\";}this.current = value;return value;};}}",
	"setOnChange": "function setOnChange(object, onchange) {if (!onchange) {return;}object.onChange = onchange;object._format = object.format;object.format = function (value) {var result = this._format(value);if (result) {this.onChange();}return result;};}",
	"createModal": "function createModal(specifiers, modalFormat) {validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");validateInternal(modalFormat == undefined || modalFormat instanceof Format || modalFormat instanceof FormatNumber, \"Invalid format.\");var prefix = \"\";var suffix = \"\";var force = false;var onchange;for (var name in specifiers) {switch (name) {case \"prefix\":prefix = specifiers[name];break;case \"suffix\":suffix = specifiers[name];break;case \"force\":force = specifiers[name];break;case \"onchange\":onchange = specifiers[name];break;default:warning(subst(localize(\"Unsupported Modal specifier '%1'.\"), name));}}var result = new ModalImpl;result.setForce(force);result.setPrefix(prefix);result.setSuffix(suffix);if (modalFormat) {if (modalFormat instanceof Format) {result.setFormatNumber(modalFormat.formatNumber);} else {result.setFormatNumber(modalFormat);}}setOnChange(result, onchange);return result;}",
	"createModalGroup": "function createModalGroup(specifiers, groups, format) {var force = false;var strict = true;var autoreset = false;var logundefined = false;for (var name in specifiers) {switch (name) {case \"force\":force = specifiers[name];break;case \"strict\":strict = specifiers[name];break;case \"autoreset\":autoreset = specifiers[name];break;case \"logundefined\":logundefined = specifiers[name];break;default:warning(subst(localize(\"Unsupported ModalGroup specifier '%1'.\"), name));}}var result = new ModalGroup;result.setForce(force);result.setStrict(strict);result.setAutoReset(autoreset);result.setLogUndefined(logundefined);if (format) {if (format instanceof Format) {result.setFormatNumber(format.formatNumber);} else {result.setFormatNumber(format);}}for (group in groups) {var id = result.createGroup();var codes = flatten(groups[group]);for (code in codes) {result.addCode(id, codes[code]);}}return result;}",
	"IdGenerator": "function IdGenerator(specifiers) {if (!(this instanceof arguments.callee)) {throw new Error(\"IdGenerator constructor called as a function.\");}this.first = 1;this.increment = 1;this.prefix = \"\";this.suffix = \"\";for (var name in specifiers) {switch (name) {case \"first\":this.first = specifiers[name];break;case \"increment\":this.increment = specifiers[name];break;case \"prefix\":this.prefix = specifiers[name];break;case \"suffix\":this.suffix = specifiers[name];break;default:warning(subst(localize(\"Unsupported IdGenerator specifier '%1'.\"), name));}}this.value = this.first;}",
	"Template": "function Template(text) {if (!(this instanceof arguments.callee)) {throw new Error(\"Template constructor called as a function.\");}this.text = text;}",
	"Variable": "function Variable(specifiers, variableFormat) {if (!(this instanceof arguments.callee)) {throw new Error(\"Variable constructor called as a function.\");}this.enabled = true;this.current = undefined;this.prefix = \"\";this.force = false;this.onChange = undefined;this.variableFormat = variableFormat;for (var name in specifiers) {switch (name) {case \"prefix\":this.prefix = specifiers[name];break;case \"force\":this.force = specifiers[name];break;case \"onchange\":this.onChange = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}}",
	"createVariable": "function createVariable(specifiers, variableFormat) {var result;if (variableFormat == undefined || variableFormat instanceof Format || variableFormat instanceof FormatNumber) {var prefix = \"\";var force = false;var onchange;validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");validateInternal(variableFormat == undefined || variableFormat instanceof Format || variableFormat instanceof FormatNumber, \"Invalid format.\");for (var name in specifiers) {switch (name) {case \"prefix\":prefix = specifiers[name];break;case \"force\":force = specifiers[name];break;case \"onchange\":onchange = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}var result = new VariableImpl;result.setForce(force);result.setPrefix(prefix);if (variableFormat) {if (variableFormat instanceof Format) {result.setFormatNumber(variableFormat.formatNumber);} else if (variableFormat instanceof FormatNumber) {result.setFormatNumber(variableFormat);}}setOnChange(result, onchange);} else {result = new Variable(specifiers, variableFormat);}return result;}",
	"IncrementalVariable": "function IncrementalVariable(specifiers, variableFormat) {if (!(this instanceof arguments.callee)) {throw new Error(\"IncrementalVariable constructor called as a function.\");}this.enabled = true;this.prefix = \"\";this.force = false;this.current = undefined;this.variableFormat = variableFormat;switch (name) {case \"prefix\":this.prefix = specifiers[name];break;case \"force\":this.force = specifiers[name];break;case \"first\":this.current = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}",
	"createIncrementalVariable": "function createIncrementalVariable(specifiers, variableFormat) {var result;if (variableFormat == undefined || variableFormat instanceof Format || variableFormat instanceof FormatNumber) {var prefix = \"\";var force = false;var first = 0;validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");for (var name in specifiers) {switch (name) {case \"prefix\":prefix = specifiers[name];break;case \"force\":force = specifiers[name];break;case \"first\":first = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}this.enabled = true;var result = new IncrementalVariableImpl;result.setForce(force);result.setPrefix(prefix);result.setFirst(first);if (variableFormat) {if (variableFormat instanceof Format) {result.setFormatNumber(variableFormat.formatNumber);} else {result.setFormatNumber(variableFormat);}}} else {result = new IncrementalVariable(specifiers, variableFormat);}return result;}",
	"CyclicVariable": "function CyclicVariable(specifiers, variableFormat) {if (!(this instanceof arguments.callee)) {throw new Error(\"CyclicVariable constructor called as a function.\");}var prefix = \"\";var force = false;var min = undefined;var max = undefined;var abs = true;validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");validateInternal(variableFormat == undefined || variableFormat instanceof Format || variableFormat instanceof FormatNumber, \"Invalid format.\");for (var name in specifiers) {switch (name) {case \"prefix\":prefix = specifiers[name];break;case \"force\":force = specifiers[name];break;case \"min\":min = specifiers[name];break;case \"max\":max = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}this.enabled = true;this.impl = new VariableImpl;this.impl.setForce(force);this.impl.setPrefix(prefix);if (variableFormat) {if (variableFormat instanceof Format) {this.impl.setFormatNumber(variableFormat.formatNumber);} else {this.impl.setFormatNumber(variableFormat);}}this.getClosest = function (value) {return value;};this.format = function (value) {return this.impl.format(this.getClosest(value));};}",
	"ReferenceVariable": "function ReferenceVariable(specifiers, variableFormat) {if (!(this instanceof arguments.callee)) {throw new Error(\"ReferenceVariable constructor called as a function.\");}this.enabled = true;this.variableFormat = variableFormat;this.prefix = \"\";this.force = false;for (var name in specifiers) {switch (name) {case \"prefix\":this.prefix = specifiers[name];break;case \"force\":this.force = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}}",
	"createReferenceVariable": "function createReferenceVariable(specifiers, variableFormat) {var result;if (variableFormat == undefined || variableFormat instanceof Format || variableFormat instanceof FormatNumber) {var prefix = \"\";var force = false;validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");for (var name in specifiers) {switch (name) {case \"prefix\":prefix = specifiers[name];break;case \"force\":force = specifiers[name];break;default:warning(subst(localize(\"Unsupported variable specifier '%1'.\"), name));}}result = new ReferenceVariableImpl;result.setForce(force);result.setPrefix(prefix);if (variableFormat) {if (variableFormat instanceof Format) {result.setFormatNumber(variableFormat.formatNumber);} else {result.setFormatNumber(variableFormat);}}} else {result = new ReferenceVariable(specifiers, variableFormat);}return result;}",
	"HIGH_FEED_NO_MAPPING": "0",
	"HIGH_FEED_MAP_MULTI": "1",
	"HIGH_FEED_MAP_XY_Z": "2",
	"HIGH_FEED_MAP_ANGULAR": "3",
	"HIGH_FEED_MAP_CLEARANCE": "4",
	"HIGH_FEED_MAP_ANY": "5",
	"clamp": "function clamp(minimum, value, maximum) {if (value < minimum) {return minimum;} else if (value > maximum) {return maximum;}return value;}",
	"concatWords": "function concatWords() {var result = \"\";if (arguments.length > 0) {separator = getWordSeparator();for (var i = 0; i < arguments.length; ++i) {if (arguments[i]) {if (result) {result += separator;}result += arguments[i];}}}return result;}",
	"UserDefinedProperties": "function UserDefinedProperties() {if (!(this instanceof arguments.callee)) {throw new Error(\"UserDefinedProperties constructor called as a function.\");}}",
	"mergeProperties": "function mergeProperties(a, b) {var result = new UserDefinedProperties;for (var name in a) {result[name] = a[name];}for (var name in b) {result[name] = b[name];}return result;}",
	"parseFloatSafe": "function parseFloatSafe(_value) {var text = String(_value);if (text.length == 0) {return undefined;}var i = 0;var sign = 1;if (text[0] == \"+\") {++i;} else if (text[0] == \"-\") {sign = -1;++i;}while (i < text.length && text[i] >= \"0\" && text[i] <= \"9\") {++i;}if (text[i] == \".\") {++i;while (i < text.length && text[i] >= \"0\" && text[i] <= \"9\") {++i;}}return parseFloat(text.substr(0, i));}",
	"trim": "function trim(text) {var l = text.length;var i = 0;while (i < l && text[i] == SP) {++i;}var j = l - 1;while (j >= 0 && text[j] == SP) {--j;}if (i == 0 && j == l - 1) {return text;}return text.substr(i, j - i + 1);}",
	"getAggregateConfiguration": "function getAggregateConfiguration(_text) {var aAxis = createAxis({coordinate: 0, table: false, axis: [1, 0, 0], range: [0, 180], preference: 1});var bAxis = createAxis({coordinate: 1, table: false, axis: [0, 1, 0], range: [0, 180], preference: 1});var cAxis = createAxis({coordinate: 2, table: false, axis: [0, 0, 1], range: [0, 360], preference: 1});var text = trim(_text);if (text.length == 0) {return new MachineConfiguration;}switch (text) {case \"X\":case \"+X\":bAxis.setRange(new Range(Math.PI / 2, Math.PI / 2));return new MachineConfiguration(bAxis);case \"-X\":bAxis.setRange(new Range(- Math.PI / 2, - Math.PI / 2));return new MachineConfiguration(bAxis);case \"Y\":case \"+Y\":aAxis.setRange(new Range(- Math.PI / 2, - Math.PI / 2));return new MachineConfiguration(aAxis);case \"-Y\":aAxis.setRange(new Range(Math.PI / 2, Math.PI / 2));return new MachineConfiguration(aAxis);case \"Z\":case \"+Z\":return new MachineConfiguration;case \"-Z\":aAxis.setRange(new Range(Math.PI, Math.PI));return new MachineConfiguration(aAxis);default:;}var gotA = false;var gotB = false;var gotC = false;var inRange = false;var word;var gotValue = false;var values = [];for (var i = 0; i < text.length; ++i) {switch (text[i]) {case \" \":if (word) {var axis;switch (word) {case \"A\":axis = aAxis;break;case \"B\":axis = bAxis;break;case \"C\":axis = cAxis;break;default:;}if (gotValue) {var value = parseFloatSafe(text.substr(j, i - j));if (value == undefined) {error(subst(localize(\"Invalid aggregate configuration at %1 (not a value).\"), i));return undefined;}gotValue = false;axis.setRange(new Range(value * 180 / Math.PI, value * 180 / Math.PI));}word = undefined;}break;case \"A\":if (word) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}if (gotA) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}gotA = true;word = \"A\";values = [];j = i + 1;break;case \"B\":if (word) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}if (gotB) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}gotB = true;word = \"B\";values = [];j = i + 1;break;case \"C\":if (word) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}if (gotC) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}gotC = true;word = \"C\";values = [];j = i + 1;break;case \"[\":if (!word) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}if (gotValue) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}if (inRange) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}inRange = true;j = i + 1;break;case \"]\":if (!inRange) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}inRange = true;var value = parseFloatSafe(text.substr(j, i - j));if (value == undefined) {error(subst(localize(\"Invalid aggregate configuration at %1 (not a value).\"), i));return undefined;}gotValue = false;values.push(value);if (values.length > 3) {error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}var axis;switch (word) {case \"A\":axis = aAxis;break;case \"B\":axis = bAxis;break;case \"C\":axis = cAxis;break;default:;}if (values == 1) {axis.setRange(new Range(values[0] * 180 / Math.PI, values[0] * 180 / Math.PI));} else if (values >= 2) {axis.setRange(new Range(values[0] * 180 / Math.PI, values[1] * 180 / Math.PI));}if (values >= 3) {if (values < 0) {error(localize(\"Invalid aggregate configuration (invalid resolution).\"));return undefined;}axis.setResolution(values[2] * 180 / Math.PI);}word = undefined;break;case \",\":if (!inRange) {return undefined;}var value = parseFloatSafe(text.substr(j, i - j));if (value == undefined) {error(subst(localize(\"Invalid aggregate configuration at %1 (not a value).\"), i));return undefined;}gotValue = false;values.push(value);j = i + 1;break;case \"0\":case \"1\":case \"2\":case \"3\":case \"4\":case \"5\":case \"6\":case \"7\":case \"8\":case \"9\":case \"+\":case \"-\":case \".\":gotValue = true;break;default:error(subst(localize(\"Invalid aggregate configuration at %1.\"), i));return undefined;}}switch ((gotA ? 1 : 0) | (gotB ? 2 : 0) | (gotC ? 4 : 0)) {case 0:return new MachineConfiguration;case 1:return new MachineConfiguration(aAxis);case 2:return new MachineConfiguration(bAxis);case 3:return new MachineConfiguration(aAxis, bAxis);case 4:return new MachineConfiguration(cAxis);case 5:return new MachineConfiguration(aAxis, cAxis);case 6:return new MachineConfiguration(bAxis, cAxis);case 7:error(localize(\"Invalid aggregate configuration (ABC not allowed).\"));return undefined;default:;}return undefined;}",
	"EvaluateDelayed": "function EvaluateDelayed(value, unit) {if (!(this instanceof arguments.callee)) {throw new Error(\"EvaluateDelayed constructor called as a function.\");}if (!(unit === MM || unit === IN)) {throw \"Invalid unit.\";}this.value = value;this.unit = unit;}",
	"isFirstSection": "function isFirstSection() {return getCurrentSectionId() == 0;}",
	"isLastSection": "function isLastSection() {return getCurrentSectionId() == getNumberOfSections() - 1;}",
	"toDeg": "function toDeg(radians) {return radians * 180 / Math.PI;}",
	"toRad": "function toRad(degrees) {return degrees * Math.PI / 180;}",
	"getAsDeg": "function getAsDeg(radians) {log(\"getAsDeg() has been deprecated. Use toDeg() instead.\");return radians * 180 / Math.PI;}",
	"getAsRad": "function getAsRad(degrees) {log(\"getAsRad() has been deprecated. Use toRad() instead.\");return degrees * Math.PI / 180;}",
	"sqr": "function sqr(value) {return value * value;}",
	"spatial": "function spatial(value, unit) {switch (unit) {case MM:return value;case IN:return value * 25;default:error(localize(\"Unit is not supported.\"));return undefined;}}",
	"getUnitSymbolAsString": "function getUnitSymbolAsString(unit) {switch (unit) {case MM:return \"mm\";case IN:return \"\\\"\";default:error(localize(\"Unit is not supported.\"));return undefined;}}",
	"toUnit": "function toUnit(value, valueUnit) {switch (unit) {case MM:switch (valueUnit) {case MM:return value;case IN:return value * 25;default:error(localize(\"Unit is not supported.\"));return undefined;}break;case IN:switch (valueUnit) {case MM:return value / 25;case IN:return value;default:error(localize(\"Unit is not supported.\"));return undefined;}break;default:error(localize(\"Unit is not supported.\"));return undefined;}return value;}",
	"toPreciseUnit": "function toPreciseUnit(value, valueUnit) {switch (unit) {case MM:switch (valueUnit) {case MM:return value;case IN:return value * 25.4;default:error(localize(\"Unit is not supported.\"));return undefined;}break;case IN:switch (valueUnit) {case MM:return value / 25.4;case IN:return value;default:error(localize(\"Unit is not supported.\"));return undefined;}break;default:error(localize(\"Unit is not supported.\"));return undefined;}return value;}",
	"parseSpatial": "function parseSpatial(_value) {var text = String(_value);if (text.length == 0) {error(localize(\"Invalid value.\"));return undefined;}var i = 0;var sign = 1;if (text[0] == \"+\") {++i;} else if (text[0] == \"-\") {sign = -1;++i;}while (i < text.length && text[i] >= \"0\" && text[i] <= \"9\") {++i;}if (text[i] == \".\") {++i;while (i < text.length && text[i] >= \"0\" && text[i] <= \"9\") {++i;}}var value = parseFloat(text.substr(0, i));var valueUnit = text.substr(i);if (!valueUnit) {error(localize(\"Unit not specified.\"));return undefined;}switch (unit) {case MM:switch (valueUnit) {case \"m\":return value * 1000;case \"cm\":return value * 10;case \"mm\":return value;case \"um\":return value / 1000;case \"nm\":return value / 1000000;case \"yd\":return value * 36 * 25.4;case \"ft\":return value * 12 * 25.4;case \"in\":return value * 25.4;case \"mil\":return value / 1000 * 25.4;case \"mils\":return value / 1000 * 25.4;case \"thou\":return value / 1000 * 25.4;default:error(localize(\"Unit is not supported.\"));return undefined;}break;case IN:switch (valueUnit) {case \"m\":return value * 1000 / 25.4;case \"cm\":return value * 10 / 2.54;case \"mm\":return value / 25.4;case \"um\":return value / 1000 / 25.4;case \"nm\":return value / 1000000 / 25.4;case \"yd\":return value * 36;case \"ft\":return value * 12;case \"in\":return value;case \"mil\":return value / 1000;case \"mils\":return value / 1000;case \"thou\":return value / 1000;default:error(localize(\"Unit is not supported.\"));return undefined;}break;default:error(localize(\"Unit is not supported.\"));return undefined;}return value;}",
	"getPlane": "function getPlane(direction) {if (isSameDirection(direction, new Vector(0, 0, 1))) {return PLANE_XY;} else if (isSameDirection(direction, new Vector(0, 1, 0))) {return PLANE_ZX;} else if (isSameDirection(direction, new Vector(1, 0, 0))) {return PLANE_YZ;} else {return undefined;}}",
	"getISOPlane": "function getISOPlane(plane) {switch (plane) {case PLANE_XY:return 17;case PLANE_ZX:return 18;case PLANE_YZ:return 19;default:return 0;}}",
	"toHex": "function toHex(value) {if (value < 0) {}if (value == 0) {return \"0\";}var result = \"\";while (value > 0) {result = toChar(value % 16) + result;value /= 16;}return result;}",
	"toChar": "function toChar(value) {var digits = \"0123456789ABCDEF\";return digits.charAt(value);}",
	"getQuadrant": "function getQuadrant(angle) {var x = Math.cos(angle);var y = Math.sin(angle);if (x > 0 && y >= 0) {return 0;}if (x <= 0 && y > 0) {return 1;}if (x < 0 && y <= 0) {return 2;}return 3;}",
	"conditional": "function conditional(condition, value) {return condition ? value : \"\";}",
	"validate": "function validate(expression, message) {if (!expression) {if (message == undefined) {throw new Error(localize(\"Invalid condition occured.\"));} else {throw new Error(message);}}}",
	"validateInternal": "function validateInternal(expression, message) {if (!expression) {if (message == undefined) {error(localize(\"Invalid condition occured.\"));} else {error(localize(message));}}}",
	"debug": "function debug(message) {if (debugMode) {debugImpl(message);}}",
	"dumpCycle": "function dumpCycle() {log(\"cycle: \" + cycleType);for (var name in cycle) {log(\"cycle: \" + name + \"=\" + cycle[name]);}}",
	"isWorkpieceDefined": "function isWorkpieceDefined() {return Vector.diff(workpieceUpper, workpieceLower).isNonZero();}",
	"getInverseTime": "function getInverseTime(distance, speed) {return 1 / (distance / speed);}",
	"cycleNotSupported": "function cycleNotSupported() {error(subst(localize(\"Cycle '%1' is not supported.\"), cycleType));}",
	"isMilling": "function isMilling() {var numberOfSections = getNumberOfSections();for (var i = 0; i < numberOfSections; ++i) {var section = getSection(i);if (section.getType() == TYPE_MILLING) {return true;}}return false;}",
	"isTurning": "function isTurning() {var numberOfSections = getNumberOfSections();for (var i = 0; i < numberOfSections; ++i) {var section = getSection(i);if (section.getType() == TYPE_TURNING) {return true;}}return false;}",
	"isJet": "function isJet() {var numberOfSections = getNumberOfSections();for (var i = 0; i < numberOfSections; ++i) {var section = getSection(i);if (section.getType() == TYPE_JET) {return true;}}return false;}",
	"getToolpathContent": "function getToolpathContent() {var result = 0;var numberOfSections = getNumberOfSections();for (var i = 0; i < numberOfSections; ++i) {result |= 1 << getSection(i).getType();}return result;}",
	"onExpandedRapid": "function onExpandedRapid(x, y, z) {var id = getCurrentPositionId();onRapid(x, y, z);if (getCurrentPositionId() == id) {setCurrentPosition(new Vector(x, y, z));}}",
	"ExpandCycle": "function ExpandCycle(x, y, z) {this.position = getSectionFramePosition(new Vector(x, y, z));this.initialPosition = getSectionFramePosition(getCurrentPosition());}",
	"onExpandedLinear": "function onExpandedLinear(x, y, z, feed) {var id = getCurrentPositionId();onLinear(x, y, z, feed);if (getCurrentPositionId() == id) {setCurrentPosition(new Vector(x, y, z));}}",
	"createMachineConfiguration": "function createMachineConfiguration(specifiers) {var description;var model;var vendor;var vendorUrl;var width;var depth;var height;var spindleAxis;var maximumSpindlePower;var maximumSpindleSpeed;var collectChuck;var x;var y;var z;var u;var v;var w;for (var name in specifiers) {switch (name) {case \"description\":description = specifiers[name];break;case \"model\":model = specifiers[name];break;case \"vendor\":vendor = specifiers[name];break;case \"vendorUrl\":vendorUrl = specifiers[name];break;case \"width\":width = specifiers[name];break;case \"depth\":depth = specifiers[name];break;case \"weight\":weight = specifiers[name];break;case \"weightCapacity\":weightCapacity = specifiers[name];break;case \"spindleAxis\":spindleAxis = specifiers[name];break;case \"maximumSpindlePower\":maximumSpindlePower = specifiers[name];break;case \"maximumSpindleSpeed\":maximumSpindleSpeed = specifiers[name];break;case \"collectChuck\":collectChuck = specifiers[name];break;case \"x\":x = specifiers[name];break;case \"y\":y = specifiers[name];break;case \"z\":z = specifiers[name];break;case \"u\":u = specifiers[name];break;case \"v\":v = specifiers[name];break;case \"w\":w = specifiers[name];break;default:warning(subst(localize(\"Unsupported machine configuration specifier '%1'.\"), name));}}var config = new MachineConfiguration(u);if (description != undefined) {config.setDescription(description);}if (model != undefined) {config.setModel(model);}if (vendor != undefined) {config.setVendor(vendor);}if (vendorUrl != undefined) {config.setVendorUrl(vendorUrl);}if (width != undefined) {config.setWidth(width);}if (depth != undefined) {config.setDepth(depth);}if (height != undefined) {config.setHeight(height);}if (weight != undefined) {config.setWeight(weight);}if (weightCapacity != undefined) {config.setWeightCapacity(weightCapacity);}if (spindleAxis != undefined) {config.setSpindleAxis(spindleAxis);}if (maximumSpindlePower != undefined) {config.setMaximumSpindlePower(maximumSpindlePower);}if (maximumSpindleSpeed != undefined) {config.setMaximumSpindleSpeed(maximumSpindleSpeed);}if (collectChuck != undefined) {config.setMaximumSpindleSpeed(collectChuck);}if (x != undefined) {config.setAxisX(x);}if (y != undefined) {config.setAxisY(y);}if (z != undefined) {config.setAxisZ(z);}if (u != undefined) {config.setAxisU(u);}if (v != undefined) {config.setAxisV(v);}if (w != undefined) {config.setAxisW(w);}return config;}",
	"getAxisAsText": "function getAxisAsText(axis) {var text = \"\";var INDENT = \"  \";var id = axis.@id;var primary = id == \"X\" || id == \"Y\" || id == \"Z\";text += localize(\"Axis\") + \": \" + id + EOL;var actuator = axis.@actuator;if (actuator == undefined) {actuator = primary ? \"linear\" : \"rotational\";}if (actuator != undefined) {if (actuator == \"linear\") {text += INDENT + localize(\"Actuator\") + \": \" + localize(\"Linear\") + EOL;} else if (actuator == \"rotational\") {text += INDENT + localize(\"Actuator\") + \": \" + localize(\"Rotational\") + EOL;}}if (axis.@link != undefined) {if (axis.@link == \"table\") {text += INDENT + localize(\"Link\") + \": \" + localize(\"Table\") + EOL;} else if (axis.@link == \"head\") {text += INDENT + localize(\"Link\") + \": \" + localize(\"Head\") + EOL;}}if (axis.@axis != undefined) {text += INDENT + localize(\"Vector\") + \": \" + axis.@axis + EOL;}if (axis.@offset != undefined) {text += INDENT + localize(\"Offset\") + \": \" + axis.@offset + EOL;}if (axis.@coordinate != undefined) {text += INDENT + localize(\"Coordinate\") + \": \" + axis.@coordinate + EOL;}if (axis.@cyclic != undefined) {text += INDENT + localize(\"Cyclic\") + \": \" + axis.@cyclic + EOL;}if (axis.@range != undefined) {text += INDENT + localize(\"Range\") + \": \" + axis.@range + EOL;}if (axis.@preference != undefined) {if (axis.@preference == \"negative\") {text += INDENT + localize(\"Preference\") + \": \" + localize(\"Negative\") + EOL;} else if (axis.@preference == \"positive\") {text += INDENT + localize(\"Preference\") + \": \" + localize(\"Positive\") + EOL;}}if (axis.@resolution != undefined) {text += INDENT + localize(\"Resolution\") + \": \" + axis.@resolution + EOL;}if (axis.@maximumFeed != undefined) {text += INDENT + localize(\"Maximum feed\") + \": \" + axis.@maximumFeed + EOL;}return text;}",
	"getMachineConfigurationAsTextYesNo": "function getMachineConfigurationAsTextYesNo(value) {return value == \"yes\" ? localize(\"Yes\") : localize(\"No\");}",
	"getMachineConfigurationAsText": "function getMachineConfigurationAsText(machine) {var m;try {var xml = machine.getXML();xml = xml.replace(/^<\\?xml\\s+version\\s*=\\s*([\"'])[^\\1]+\\1[^?]*\\?>/, \"\");m = new XML(xml);} catch (e) {error(localize(\"Invalid machine configuration.\"));}var n = new Namespace(\"http://www.hsmworks.com/xml/2009/machine\");var text = \"\";if (m.n::model != undefined) {text += localize(\"Model\") + \": \" + m.n::model + EOL;}if (m.n::description != undefined) {text += localize(\"Description\") + \": \" + m.n::description + EOL;}if (m.n::vendor != undefined) {text += localize(\"Vendor\") + \": \" + m.n::vendor + EOL;}if (m.n::vendorUrl != undefined) {text += localize(\"Link\") + \": \" + m.n::vendorUrl + EOL;}text += EOL;var INDENT = \"  \";if (m.n::dimensions != undefined) {text += localize(\"Dimensions\") + \":\" + EOL;if (m.n::dimensions.@width != undefined) {text += INDENT + localize(\"Width\") + \": \" + m.n::dimensions.@width + EOL;}if (m.n::dimensions.@depth != undefined) {text += INDENT + localize(\"Depth\") + \": \" + m.n::dimensions.@depth + EOL;}if (m.n::dimensions.@height != undefined) {text += INDENT + localize(\"Height\") + \": \" + m.n::dimensions.@height + EOL;}if (m.n::dimensions.@weight != undefined) {text += INDENT + localize(\"Weight\") + \": \" + m.n::dimensions.@weight + EOL;}text += EOL;}if (m.n::capacities != undefined) {text += localize(\"Capacities\") + \":\" + EOL;if (m.n::machining != undefined) {text += INDENT + localize(\"Milling\") + \": \" + getMachineConfigurationAsTextYesNo(m.n::machining.@milling) + EOL;}if (m.n::machining != undefined) {text += INDENT + localize(\"Turning\") + \": \" + getMachineConfigurationAsTextYesNo(m.n::machining.@turning) + EOL;}if (m.n::machining != undefined) {text += INDENT + localize(\"Wire\") + \": \" + getMachineConfigurationAsTextYesNo(m.n::machining.@wire) + EOL;}text += INDENT + localize(\"Part dimensions\") + \":\" + EOL;if (m.n::capacities.@width != undefined) {text += INDENT + INDENT + localize(\"Width\") + \": \" + m.n::capacities.@width + EOL;}if (m.n::capacities.@depth != undefined) {text += INDENT + INDENT + localize(\"Depth\") + \": \" + m.n::capacities.@depth + EOL;}if (m.n::capacities.@height != undefined) {text += INDENT + INDENT + localize(\"Height\") + \": \" + m.n::capacities.@height + EOL;}if (m.n::capacities.@weight != undefined) {text += INDENT + localize(\"Weight\") + \": \" + m.n::capacities.@weight + EOL;}text += EOL;}if (m.n::tooling != undefined) {text += localize(\"Tooling\") + \":\" + EOL;if (m.n::tooling.@toolChanger != undefined) {text += INDENT + localize(\"Tool changer\") + \": \" + getMachineConfigurationAsTextYesNo(m.n::tooling.@toolChanger) + EOL;}if (m.n::tooling.@toolPreload != undefined) {text += INDENT + localize(\"Tool preload\") + \": \" + getMachineConfigurationAsTextYesNo(m.n::tooling.@toolPreload) + EOL;}if (m.n::tooling.@numberOfTools != undefined) {text += INDENT + localize(\"Number of tools\") + \": \" + m.n::tooling.@numberOfTools + EOL;}text += EOL;}if (m.n::capabilities != undefined) {text += localize(\"Capabilities\") + \":\" + EOL;if (m.n::capabilities.@workOffsets != undefined) {text += INDENT + localize(\"Work offsets\") + \": \" + m.n::capabilities.@workOffsets + EOL;}text += EOL;}if (m.n::home != undefined) {text += localize(\"Home\") + \":\" + EOL;if (m.n::home.@x != undefined) {text += INDENT + localize(\"X\") + \": \" + m.n::home.@x + EOL;}if (m.n::home.@y != undefined) {text += INDENT + localize(\"Y\") + \": \" + m.n::home.@y + EOL;}if (m.n::home.@z != undefined) {text += INDENT + localize(\"Z\") + \": \" + m.n::home.@z + EOL;}text += EOL;}if (m.n::coolant != undefined) {text += localize(\"Coolant\") + \":\" + EOL;if (m.n::coolant.@options != undefined) {text += INDENT + localize(\"Coolant\") + \": \" + m.n::coolant.@options + EOL;}text += EOL;}if (m.n::spindle != undefined) {text += localize(\"Spindle\") + \":\" + EOL;if (m.n::spindle.@axis != undefined) {text += INDENT + localize(\"Vector\") + \": \" + m.n::spindle.@axis + EOL;}if (m.n::spindle.@maximumSpeed != undefined) {text += INDENT + localize(\"Maximum speed\") + \": \" + m.n::spindle.@maximumSpeed + EOL;}text += EOL;}var axes = m.n::axis;for (var i in axes) {var axis = axes[i];text += getAxisAsText(axis);}return text;}",
	"repositionToCycleClearance": "function repositionToCycleClearance(cycle, x, y, z) {if (spindleAxis != TOOL_AXIS_Z) {error(localize(\"Unsupported spindle axis.\"));return;}if (false) {var expand = new ExpandCycle(x, y, z);var clearanceX = cycle.clearance;var currentX = expand.initialPosition.x;if (currentX > clearanceX) {expand.expandRapidX(currentX);}expand.expandRapidX(clearanceX);} else {var expand = new ExpandCycle(x, y, z);var clearanceZ = cycle.clearance;var currentZ = expand.initialPosition.z;if (currentZ > clearanceZ) {expand.expandRapidZ(currentZ);}expand.expandRapidZ(clearanceZ);}}",
	"expandDrilling": "function expandDrilling(x, y, z, clearance, retract, stock, depth, feedrate, flags) {expandCounterBoring(x, y, z, clearance, retract, stock, depth, feedrate, 0, flags);}",
	"expandCounterBoring": "function expandCounterBoring(x, y, z, clearance, retract, stock, depth, feedrate, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);var bottom = stock - depth;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}expand.expandRapidZ(clearance);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}expand.expandRapidZ(clearance);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandChipBreaking": "function expandChipBreaking(x, y, z, clearance, retract, stock, depth, feedrate, incrementalDepth, incrementalDepthReduction, minimumIncrementalDepth, accumulatedDepth, chipBreakDistance, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);var bottom = stock - depth;validate(incrementalDepth >= 0, \"Invalid incremental depth.\");validate(incrementalDepthReduction >= 0, \"Invalid incremental depth reduction.\");validate(minimumIncrementalDepth >= 0, \"Invalid minimum incremental depth.\");validate(accumulatedDepth >= 0, \"Invalid accumulated depth.\");if (chipBreakDistance != undefined) {validate(chipBreakDistance >= 0, \"Invalid chip break distance.\");}var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var retracted = true;var lastFullRetractZ = stock;var stockZ = stock;while (true) {if (incrementalDepth <= 0) {error(localize(\"Incremental depth is invalid.\"));return;}var newZ = stockZ - incrementalDepth;incrementalDepth -= incrementalDepthReduction;if (incrementalDepth < minimumIncrementalDepth) {incrementalDepth = minimumIncrementalDepth;}var done = newZ <= bottom;if (done) {newZ = bottom;}if (retracted) {if (machineParameters.drillingSafeDistance != undefined) {var safeZ = stockZ + machineParameters.drillingSafeDistance;if (safeZ < getCurrentPosition().z) {expand.expandRapidZ(safeZ);}}}retracted = false;expand.expandLinearZ(newZ, feedrate);stockZ = newZ;if (done) {if (dwell > 0) {onDwell(dwell);}break;}if (accumulatedDepth == undefined || chipBreakDistance == undefined && machineParameters.chipBreakingDistance == undefined || lastFullRetractZ - newZ - incrementalDepth >= accumulatedDepth) {lastFullRetractZ = newZ;expand.expandRapidZ(clearance);retracted = true;} else {expand.expandRapidZ(stockZ + (chipBreakDistance != undefined ? chipBreakDistance : machineParameters.chipBreakingDistance));}}expand.expandRapidZ(clearance);}",
	"expandDeepDrilling": "function expandDeepDrilling(x, y, z, clearance, retract, stock, depth, feedrate, incrementalDepth, incrementalDepthReduction, minimumIncrementalDepth, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);validateInternal(incrementalDepth >= 0, \"Invalid incremental depth.\");validate(incrementalDepthReduction >= 0, \"Invalid incremental depth reduction.\");validate(minimumIncrementalDepth >= 0, \"Invalid minimum incremental depth.\");var bottom = stock - depth;var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var retracted = true;var stockZ = stock;while (true) {if (incrementalDepth <= 0) {error(localize(\"Incremental depth is invalid.\"));return;}var newZ = stockZ - incrementalDepth;incrementalDepth -= incrementalDepthReduction;if (incrementalDepth < minimumIncrementalDepth) {incrementalDepth = minimumIncrementalDepth;}var done = newZ <= bottom;if (done) {newZ = bottom;}if (retracted) {if (machineParameters.drillingSafeDistance != undefined) {var safeZ = stockZ + machineParameters.drillingSafeDistance;if (safeZ < getCurrentPosition().z) {expand.expandRapidZ(safeZ);}}}retracted = false;expand.expandLinearZ(newZ, feedrate);stockZ = newZ;if (done) {if (dwell > 0) {onDwell(dwell);}break;}expand.expandRapidZ(retract);retracted = true;}expand.expandRapidZ(clearance);}",
	"expandBreakThroughDrilling": "function expandBreakThroughDrilling(x, y, z, clearance, retract, stock, depth, feedrate, breakThroughDistance, breakThroughFeedrate, breakThroughSpindleSpeed, dwell, stopSpindle, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);var rapidRetract = false;var bottom = stock - depth;validate(breakThroughDistance >= 0, localize(\"Invalid break-through depth.\"));var useBreakThroughSpeed = Math.abs(breakThroughSpindleSpeed - tool.spindleRPM) >= 0.000001;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var _z = bottom + breakThroughDistance;if (_z < retract) {expand.expandLinearZ(_z, feedrate);}if (useBreakThroughSpeed) {onSpindleSpeed(breakThroughSpindleSpeed);}expand.expandLinearZ(bottom, breakThroughFeedrate);if (dwell > 0) {onDwell(dwell);}if (stopSpindle) {onCommand(COMMAND_STOP_SPINDLE);} else {if (useBreakThroughSpeed) {onSpindleSpeed(tool.spindleRPM);}}if (!rapidRetract) {expand.expandLinearZ(retract, feedrate);}if (stopSpindle) {onSpindleSpeed(tool.spindleRPM);}expand.expandRapidZ(clearance);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var _z = bottom + breakThroughDistance;if (_z < retract) {expand.expandLinearZ(_z, feedrate);}if (useBreakThroughSpeed) {onSpindleSpeed(breakThroughSpindleSpeed);}expand.expandLinearZ(bottom, breakThroughFeedrate);if (dwell > 0) {onDwell(dwell);}if (stopSpindle) {onCommand(COMMAND_STOP_SPINDLE);} else {if (useBreakThroughSpeed) {onSpindleSpeed(tool.spindleRPM);}}if (!rapidRetract) {expand.expandLinearZ(retract, feedrate);}if (stopSpindle) {onSpindleSpeed(tool.spindleRPM);}expand.expandRapidZ(clearance);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandGunDrilling": "function expandGunDrilling(x, y, z, clearance, retract, stock, depth, feedrate, startingDepth, stopSpindle, positioningFeedrate, positioningSpindleSpeed, dwellDepth, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);var rapidRetract = false;var bottom = stock - depth;validate(stock - startingDepth >= bottom, localize(\"Invalid starting depth.\"));var usePositioningSpeed = Math.abs(positioningSpindleSpeed - tool.spindleRPM) >= 0.000001;if (!stopSpindle && usePositioningSpeed) {onSpindleSpeed(positioningSpindleSpeed);}if (stopSpindle) {onCommand(COMMAND_STOP_SPINDLE);}if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(Math.max(stock - startingDepth, bottom), positioningFeedrate);if (stopSpindle) {onCommand(COMMAND_START_SPINDLE);}if (!stopSpindle) {onSpindleSpeed(tool.spindleRPM);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {if (dwellDepth > 0) {expand.expandLinearZ(bottom + dwellDepth, feedrate);}onDwell(dwell);}if (!rapidRetract) {if (stopSpindle) {onCommand(COMMAND_STOP_SPINDLE);} else {if (usePositioningSpeed) {onSpindleSpeed(positioningSpindleSpeed);}}expand.expandLinearZ(retract, positioningFeedrate);}expand.expandRapidZ(clearance);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(Math.max(stock - startingDepth, bottom), positioningFeedrate);if (stopSpindle) {onCommand(COMMAND_START_SPINDLE);}if (!stopSpindle) {onSpindleSpeed(tool.spindleRPM);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {if (dwellDepth > 0) {expand.expandLinearZ(bottom + dwellDepth, feedrate);}onDwell(dwell);}if (!rapidRetract) {if (stopSpindle) {onCommand(COMMAND_STOP_SPINDLE);} else {if (usePositioningSpeed) {onSpindleSpeed(positioningSpindleSpeed);}}expand.expandLinearZ(retract, positioningFeedrate);}expand.expandRapidZ(clearance);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandTappingWithChipBreaking": "function expandTappingWithChipBreaking(x, y, z, clearance, retract, stock, depth, feedrate, incrementalDepth, incrementalDepthReduction, minimumIncrementalDepth, accumulatedDepth, chipBreakDistance, dwell, cw, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);var bottom = stock - depth;validate(incrementalDepth >= 0, \"Invalid incremental depth.\");validate(incrementalDepthReduction >= 0, \"Invalid incremental depth reduction.\");validate(minimumIncrementalDepth >= 0, \"Invalid minimum incremental depth.\");validate(accumulatedDepth >= 0, \"Invalid accumulated depth.\");if (chipBreakDistance != undefined) {validate(chipBreakDistance >= 0, \"Invalid chip break distance.\");}var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var originalSpeedFeedSynchronization = isSpeedFeedSynchronizationActive();if (!originalSpeedFeedSynchronization) {if (!onCommand(COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION)) {}}var lastFullRetractZ = stock;var stockZ = stock;while (true) {if (incrementalDepth <= 0) {error(localize(\"Incremental depth is invalid.\"));return;}var newZ = stockZ - incrementalDepth;incrementalDepth -= incrementalDepthReduction;if (incrementalDepth < minimumIncrementalDepth) {incrementalDepth = minimumIncrementalDepth;}var done = newZ <= bottom;if (done) {newZ = bottom;}onCommand(cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);expand.expandLinearZ(newZ, feedrate);stockZ = newZ;if (done) {if (dwell > 0) {onDwell(dwell);}break;}onCommand(!cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);if (accumulatedDepth == undefined || chipBreakDistance == undefined && machineParameters.chipBreakingDistance == undefined || lastFullRetractZ - newZ - incrementalDepth >= accumulatedDepth) {lastFullRetractZ = newZ;expand.expandRapidZ(clearance);} else {expand.expandRapidZ(stockZ + (chipBreakDistance != undefined ? chipBreakDistance : machineParameters.chipBreakingDistance));}}onCommand(cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);if (!originalSpeedFeedSynchronization) {if (!onCommand(COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION)) {}}if (clearance > retract) {expand.expandRapidZ(clearance);}}",
	"expandTapping": "function expandTapping(x, y, z, clearance, retract, stock, depth, feedrate, dwell, cw, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);var bottom = stock - depth;var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var originalSpeedFeedSynchronization = isSpeedFeedSynchronizationActive();if (!originalSpeedFeedSynchronization) {if (!onCommand(COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION)) {}}onCommand(cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(!cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);expand.expandLinearZ(retract, feedrate);onCommand(cw ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);if (!originalSpeedFeedSynchronization) {if (!onCommand(COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION)) {}}if (clearance > retract) {expand.expandRapidZ(clearance);}}",
	"expandReaming": "function expandReaming(x, y, z, clearance, retract, stock, depth, feedrate, retractFeedrate, flags) {expandBoring(x, y, z, clearance, retract, stock, depth, feedrate, retractFeedrate, 0, flags);}",
	"expandBoring": "function expandBoring(x, y, z, clearance, retract, stock, depth, feedrate, retractFeedrate, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);var bottom = stock - depth;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}expand.expandLinearZ(retract, retractFeedrate);if (clearance > retract) {expand.expandRapidZ(clearance);}} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}expand.expandLinearZ(retract, retractFeedrate);if (clearance > retract) {expand.expandRapidZ(clearance);}} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandStopBoring": "function expandStopBoring(x, y, z, clearance, retract, stock, depth, feedrate, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);var bottom = stock - depth;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandManualBoring": "function expandManualBoring(x, y, z, clearance, retract, stock, depth, feedrate, dwell, flags) {validate(spindleAxis == TOOL_AXIS_Z);var bottom = stock - depth;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);onCommand(COMMAND_STOP);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);onCommand(COMMAND_STOP);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"expandBackBoring": "function expandBackBoring(x, y, z, clearance, retract, stock, depth, feedrate, dwell, shift, shiftOrientation, backBoreDistance, flags) {validate(spindleAxis == TOOL_AXIS_Z);validate(currentSection.type == TYPE_MILLING || currentSection.type == TYPE_TURNING);validateInternal(shift >= 0, \"Invalid shift.\");validateInternal(backBoreDistance >= 0, \"Invalid back boring distance.\");var bottom = stock - depth;var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}var backZ = bottom - backBoreDistance;var spindleOrientation = 0;var spindleOrientation = shiftOrientation;if (shiftOrientation != undefined) {spindleOrientation = !machineParameters.spindleOrientation ? 0 : getAsRad(machineParameters.spindleOrientation);}var dx = shift * Math.cos(spindleOrientation);var dy = shift * Math.sin(spindleOrientation);onCommand(COMMAND_STOP_SPINDLE);if (shiftOrientation != undefined) {onCommand(COMMAND_ORIENTATE_SPINDLE);} else {onOrientateSpindle(spindleOrientation);}expand.expandRapidDXY(dx, dy, clearance);expand.expandRapidDXY(dx, dy, bottom);expand.expandRapidZ(bottom);onCommand(COMMAND_START_SPINDLE);expand.expandLinearZ(backZ, feedrate);if (dwell > 0) {onDwell(dwell);}expand.expandLinearZ(bottom, feedrate);onCommand(COMMAND_STOP_SPINDLE);if (shiftOrientation != undefined) {onCommand(COMMAND_ORIENTATE_SPINDLE);} else {onOrientateSpindle(spindleOrientation);}expand.expandRapidDXY(dx, dy, bottom);expand.expandRapidDXY(dx, dy, clearance);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);}",
	"expandFineBoring": "function expandFineBoring(x, y, z, clearance, retract, stock, depth, feedrate, dwell, shift, flags) {validate(spindleAxis == TOOL_AXIS_Z);var bottom = stock - depth;if (currentSection.type == TYPE_MILLING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);onCommand(COMMAND_ORIENTATE_SPINDLE);var spindleOrientation = !machineParameters.spindleOrientation ? 0 : getAsRad(machineParameters.spindleOrientation);var dx = shift * Math.cos(spindleOrientation);var dy = shift * Math.sin(spindleOrientation);expand.expandLinearDXY(dx, dy, bottom, feedrate);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else if (currentSection.type == TYPE_TURNING) {var expand = new ExpandCycle(x, y, z);expand.expandPreliminaryZ(clearance);if (retract < clearance) {expand.expandRapidZ(retract);}expand.expandLinearZ(bottom, feedrate);if (dwell > 0) {onDwell(dwell);}onCommand(COMMAND_STOP_SPINDLE);onCommand(COMMAND_ORIENTATE_SPINDLE);var spindleOrientation = !machineParameters.spindleOrientation ? 0 : getAsRad(machineParameters.spindleOrientation);var dx = shift * Math.cos(spindleOrientation);var dy = shift * Math.sin(spindleOrientation);expand.expandLinearDXY(dx, dy, bottom, feedrate);expand.expandRapidZ(clearance);onCommand(COMMAND_START_SPINDLE);} else {error(localize(\"Unsupported toolpath type.\"));}}",
	"FLAG_CYCLE_REPEAT_PASS": "1",
	"expandCyclePoint": "function expandCyclePoint(x, y, z) {if (!cycle) {error(\"expandCyclePoint() invoked outside cycle context.\");return;}cycleExpanded = true;var flags = 0;if (debugMode) {log(\"expandCyclePoint(): \" + cycleType);for (var name in cycle) {log(\"expandCyclePoint(): \" + name + \"=\" + cycle[name]);}}if (spindleAxis != TOOL_AXIS_Z) {error(localize(\"Unsupported spindle axis.\"));return;}switch (cycleType) {case \"drilling\":expandDrilling(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, flags);break;case \"counter-boring\":expandCounterBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, flags);break;case \"chip-breaking\":expandChipBreaking(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.incrementalDepth, cycle.incrementalDepthReduction, cycle.minimumIncrementalDepth, cycle.accumulatedDepth, cycle.chipBreakDistance, cycle.dwell, flags);break;case \"deep-drilling\":expandDeepDrilling(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.incrementalDepth, cycle.incrementalDepthReduction, cycle.minimumIncrementalDepth, cycle.dwell, flags);break;case \"break-through-drilling\":expandBreakThroughDrilling(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.breakThroughDistance, cycle.breakThroughFeedrate, cycle.breakThroughSpindleSpeed, cycle.dwell, cycle.stopSpindle, flags);break;case \"gun-drilling\":expandGunDrilling(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.startingDepth, cycle.stopSpindle, cycle.positioningFeedrate, cycle.positioningSpindleSpeed, cycle.dwellDepth, cycle.dwell, flags);break;case \"tapping\":expandTapping(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, tool.type != TOOL_TAP_LEFT_HAND, flags);break;case \"left-tapping\":expandTapping(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, false, flags);break;case \"right-tapping\":expandTapping(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, true, flags);break;case \"tapping-with-chip-breaking\":expandTappingWithChipBreaking(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.incrementalDepth, cycle.incrementalDepthReduction, cycle.minimumIncrementalDepth, cycle.accumulatedDepth, cycle.chipBreakDistance, cycle.dwell, tool.type != TOOL_TAP_LEFT_HAND, flags);break;case \"left-tapping-with-chip-breaking\":expandTappingWithChipBreaking(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.incrementalDepth, cycle.incrementalDepthReduction, cycle.minimumIncrementalDepth, cycle.accumulatedDepth, cycle.chipBreakDistance, cycle.dwell, false, flags);break;case \"right-tapping-with-chip-breaking\":expandTappingWithChipBreaking(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.incrementalDepth, cycle.incrementalDepthReduction, cycle.minimumIncrementalDepth, cycle.accumulatedDepth, cycle.chipBreakDistance, cycle.dwell, true, flags);break;case \"reaming\":expandReaming(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.retractFeedrate, flags);break;case \"boring\":expandBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.retractFeedrate, cycle.dwell, flags);break;case \"stop-boring\":expandStopBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, flags);break;case \"fine-boring\":expandFineBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, cycle.shift, flags);break;case \"back-boring\":expandBackBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, cycle.shift, cycle.shiftOrientation, cycle.backBoreDistance, flags);break;case \"manual-boring\":expandManualBoring(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.dwell, flags);break;case \"bore-milling\":if (cycle.numberOfSteps > 1) {cycle.stepover;}var climb = true;if (cycle.direction != undefined) {if (cycle.direction && !cycle.direction in {climb: 0, conventional: 0}) {error(localize(\"Unsupported milling direction.\"));return;}climb = cycle.direction != \"conventional\";}var numberOfSteps = 1;if (cycle.numberOfSteps) {numberOfSteps = cycle.numberOfSteps;}var stepover = 0;if (cycle.stepover) {stepover = cycle.stepover;}if (cycle.repeatPass) {flags |= FLAG_CYCLE_REPEAT_PASS;}if (cycle.compensation == undefined) {flags |= 0;} else {switch (cycle.compensation) {case \"computer\":flags |= 0;break;case \"control\":flags |= 2;break;case \"wear\":flags |= 4;break;case \"inverseWear\":flags |= 6;break;default:error(localize(\"Unsupported compensation type.\"));return;}}expandBoreMilling2(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.diameter, cycle.pitch, numberOfSteps, stepover, climb, flags);break;case \"thread-milling\":if (cycle.direction && !cycle.direction in {climb: 0, conventional: 0}) {error(localize(\"Unsupported milling direction.\"));return;}var climb = true;if (cycle.direction != undefined) {if (cycle.direction && !cycle.direction in {climb: 0, conventional: 0}) {error(localize(\"Unsupported milling direction.\"));return;}climb = cycle.direction != \"conventional\";}if (cycle.threading && !cycle.threading in {left: 0, right: 0}) {error(localize(\"Unsupported threading type.\"));return;}var rightHanded = cycle.threading != \"left\";var numberOfSteps = 1;if (cycle.numberOfSteps) {numberOfSteps = cycle.numberOfSteps;}var stepover = 0;if (cycle.stepover) {stepover = cycle.stepover;}if (cycle.repeatPass) {flags |= FLAG_CYCLE_REPEAT_PASS;}if (cycle.compensation == undefined) {flags |= 0;} else {switch (cycle.compensation) {case \"computer\":flags |= 0;break;case \"control\":flags |= 2;break;case \"wear\":flags |= 4;break;case \"inverseWear\":flags |= 6;break;default:error(localize(\"Unsupported compensation type.\"));return;}}expandThreadMilling2(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.diameter, cycle.pitch, numberOfSteps, stepover, climb, rightHanded, flags);break;case \"circular-pocket-milling\":if (cycle.direction && !cycle.direction in {climb: 0, conventional: 0}) {error(localize(\"Unsupported milling direction.\"));return;}var climb = cycle.direction != \"conventional\";if (cycle.repeatPass) {flags |= FLAG_CYCLE_REPEAT_PASS;}expandCircularPocketMilling2(x, y, z, cycle.clearance, cycle.retract, cycle.stock, cycle.depth, cycle.feedrate, cycle.plungeFeedrate, cycle.diameter, cycle.incrementalDepth, cycle.stepover, climb, flags);break;case \"probe\":error(localize(\"The probe cycle is machine specific and must always be handled in the post configuration.\"));break;case \"thread-turning\":error(localize(\"The turning thread cycle is machine specific and must always be handled in the post configuration.\"));break;case \"stock-transfer\":error(localize(\"The stock transfer cycle is machine specific and must always be handled in the post configuration.\"));break;default:cycleNotSupported();}}",
	"onClearCycleParameters": "function onClearCycleParameters() {cycleExpanded = undefined;cycle = {};}",
	"onCycleParameter": "function onCycleParameter(name, value) {cycle[name] = value;}",
	"validifyCycleParameters": "function validifyCycleParameters() {validateInternal(cycle.clearance != undefined, \"The clearance plane is undefined.\");cycle.retract = cycle.retract != undefined ? cycle.retract : cycle.clearance;validateInternal(cycle.retract <= cycle.clearance, \"The retract plane is above the clearance plane.\");cycle.stock = cycle.stock != undefined ? cycle.stock : cycle.retract;validateInternal(cycle.stock <= cycle.retract, \"The stock plane is above the retract plane.\");cycle.depth = cycle.depth != undefined ? cycle.depth : 0;validateInternal(cycle.depth >= 0, \"The depth is invalid.\");cycle.bottom = cycle.stock - cycle.depth;validateInternal(cycle.bottom <= cycle.stock, \"The bottom plane is above the stock plane.\");if (cycle.feedrate == undefined && (cycleType == \"tapping\" || cycleType == \"right-tapping\" || cycleType == \"left-tapping\" || cycleType == \"tapping-with-chip-breaking\" || cycleType == \"right-tapping-with-chip-breaking\" || cycleType == \"left-tapping-with-chip-breaking\")) {cycle.feedrate = tool.getTappingFeedrate();}cycle.feedrate = cycle.feedrate != undefined ? cycle.feedrate : 0;validateInternal(cycle.feedrate >= 0, localize(\"The feedrate is invalid.\"));if (cycle.retractFeedrate == undefined) {cycle.retractFeedrate = cycle.feedrate;}validateInternal(cycle.retractFeedrate >= 0, localize(\"The retract feedrate is invalid.\"));if (cycle.plungeFeedrate == undefined) {cycle.plungeFeedrate = cycle.feedrate;}validateInternal(cycle.plungeFeedrate >= 0, \"The plunge feedrate is invalid.\");cycle.dwell = cycle.dwell != undefined ? cycle.dwell : 0;validateInternal(cycle.dwell >= 0, \"The dwelling time is invalid.\");cycle.incrementalDepth = cycle.incrementalDepth != undefined ? cycle.incrementalDepth : cycle.depth;if (cycle.incrementalDepth >= cycle.depth) {cycle.incrementalDepth = cycle.depth;}validateInternal(cycle.incrementalDepth >= 0, \"The incremental depth must be positive or zero.\");cycle.incrementalDepthReduction = cycle.incrementalDepthReduction != undefined ? cycle.incrementalDepthReduction : 0;validateInternal(cycle.incrementalDepthReduction >= 0, \"The incremental depth reduction must be positive or zero.\");cycle.minimumIncrementalDepth = cycle.minimumIncrementalDepth != undefined ? cycle.minimumIncrementalDepth : 0;validateInternal(cycle.minimumIncrementalDepth >= 0, \"The minimum plunge depth must be positive or zero.\");validateInternal(cycle.accumulatedDepth == undefined || cycle.accumulatedDepth >= 0, \"The accumulated depth must be positive.\");if (cycle.accumulatedDepth != undefined) {cycle.plungesPerRetract = Math.max(Math.floor(cycle.accumulatedDepth / cycle.incrementalDepth), 1);} else {cycle.plungesPerRetract = 1;}if (cycle.chipBreakDistance != undefined) {validateInternal(cycle.chipBreakDistance >= 0, \"The chip break distance must be positive.\");}cycle.shift = cycle.shift != undefined ? cycle.shift : 0;validateInternal(cycle.shift >= 0, \"The shift distance must be positive.\");cycle.shiftOrientation = cycle.shiftOrientation != undefined ? cycle.shiftOrientation : machineParameters.spindleOrientation;cycle.compensatedShiftOrientation = cycle.shiftOrientation - tool.boringBarOrientation;cycle.shiftDirection = Math.PI + cycle.compensatedShiftOrientation;cycle.backBoreDistance = cycle.backBoreDistance != undefined ? cycle.backBoreDistance : 0;validateInternal(cycle.backBoreDistance >= 0, \"The back boring distance must be positive.\");}",
	"onMachine": "function onMachine() {if (debugMode) {if (writeComment) {writeComment(\"onMachine(): machine configuration updated\");}}}",
	"onOpen": "function onOpen() {writeln(\"\");writeln(\"JSON.stringify(this,null,'\\t')   >>>>>>>>>>>>>>\");writeln(JSON.stringify(this, null, \"\\t\"));writeln(\"\");writeln(\"JSON.stringify(this.prototype,null,'\\t')   >>>>>>>>>>>>>>\");writeln(JSON.stringify(this.prototype, null, \"\\t\"));writeln(\"\");writeln(\"JSON.stringify(getMethods(this),null,'\\t')   >>>>>>>>>>>>>>\");writeln(JSON.stringify(getMethods(this), null, \"\\t\"));writeln(\"\");writeln(\"JSON.stringify(this.keys,null,'\\t')   >>>>>>>>>>>>>>\");writeln(JSON.stringify(this.keys, null, \"\\t\"));writeln(\"\");writeln(\"JSON.stringify(reconstruct(this),null,'\\t')   >>>>>>>>>>>>>>\");writeln(JSON.stringify(reconstruct(this), null, \"\\t\"));optimizeMachineAngles2(1);if (!machineConfiguration.isMachineCoordinate(0)) {aOutput.disable();writeComment(\"A output is disabled\");}if (!machineConfiguration.isMachineCoordinate(1)) {bOutput.disable();writeComment(\"B output is disabled\");}if (!machineConfiguration.isMachineCoordinate(2)) {cOutput.disable();writeComment(\"C output is disabled\");}if (!properties.separateWordsWithSpace) {setWordSeparator(\"\");}sequenceNumber = properties.sequenceNumberStart;if (programName) {writeComment(programName);}if (programComment) {writeComment(programComment);}var vendor = machineConfiguration.getVendor();var model = machineConfiguration.getModel();var description = machineConfiguration.getDescription();if (properties.writeMachine && (vendor || model || description)) {writeComment(localize(\"Machine\"));if (vendor) {writeComment(\"  \" + localize(\"vendor\") + \": \" + vendor);}if (model) {writeComment(\"  \" + localize(\"model\") + \": \" + model);}if (description) {writeComment(\"  \" + localize(\"description\") + \": \" + description);}}if (properties.writeTools) {var zRanges = {};if (is3D()) {var numberOfSections = getNumberOfSections();for (var i = 0; i < numberOfSections; ++i) {var section = getSection(i);var zRange = section.getGlobalZRange();var tool = section.getTool();if (zRanges[tool.number]) {zRanges[tool.number].expandToRange(zRange);} else {zRanges[tool.number] = zRange;}}}var tools = getToolTable();if (tools.getNumberOfTools() > 0) {for (var i = 0; i < tools.getNumberOfTools(); ++i) {var tool = tools.getTool(i);var comment = \"T\" + toolFormat.format(tool.number) + \"  \" + \"D=\" + xyzFormat.format(tool.diameter) + \" \" + localize(\"CR\") + \"=\" + xyzFormat.format(tool.cornerRadius);if (tool.taperAngle > 0 && tool.taperAngle < Math.PI) {comment += \" \" + localize(\"TAPER\") + \"=\" + taperFormat.format(tool.taperAngle) + localize(\"deg\");}if (zRanges[tool.number]) {comment += \" - \" + localize(\"ZMIN\") + \"=\" + xyzFormat.format(zRanges[tool.number].getMinimum());}comment += \" - \" + getToolTypeName(tool.type);writeComment(comment);}}}if (false) {for (var i = 0; i < getNumberOfSections(); ++i) {var sectioni = getSection(i);var tooli = sectioni.getTool();for (var j = i + 1; j < getNumberOfSections(); ++j) {var sectionj = getSection(j);var toolj = sectionj.getTool();if (tooli.number == toolj.number) {if (xyzFormat.areDifferent(tooli.diameter, toolj.diameter) || xyzFormat.areDifferent(tooli.cornerRadius, toolj.cornerRadius) || abcFormat.areDifferent(tooli.taperAngle, toolj.taperAngle) || tooli.numberOfFlutes != toolj.numberOfFlutes) {error(subst(localize(\"Using the same tool number for different cutter geometry for operation '%1' and '%2'.\"), sectioni.hasParameter(\"operation-comment\") ? sectioni.getParameter(\"operation-comment\") : \"#\" + (i + 1), sectionj.hasParameter(\"operation-comment\") ? sectionj.getParameter(\"operation-comment\") : \"#\" + (j + 1)));return;}}}}}writeBlock(gAbsIncModal.format(90), gFeedModeModal.format(94), gFormat.format(91.1), gFormat.format(40), gFormat.format(49), gPlaneModal.format(17));switch (unit) {case IN:writeBlock(gUnitModal.format(20));break;case MM:writeBlock(gUnitModal.format(21));break;default:;}}",
	"onClose": "function onClose() {writeln(\"\");onCommand(COMMAND_COOLANT_OFF);if (properties.useG28) {writeBlock(gFormat.format(28), gAbsIncModal.format(91), \"Z\" + xyzFormat.format(0));zOutput.reset();}setWorkPlane(new Vector(0, 0, 0));if (!machineConfiguration.hasHomePositionX() && !machineConfiguration.hasHomePositionY()) {if (properties.useG28) {writeBlock(gFormat.format(28), gAbsIncModal.format(91), \"X\" + xyzFormat.format(0), \"Y\" + xyzFormat.format(0));}} else {var homeX;if (machineConfiguration.hasHomePositionX()) {homeX = \"X\" + xyzFormat.format(machineConfiguration.getHomePositionX());}var homeY;if (machineConfiguration.hasHomePositionY()) {homeY = \"Y\" + xyzFormat.format(machineConfiguration.getHomePositionY());}writeBlock(gAbsIncModal.format(90), gFormat.format(53), gMotionModal.format(0), homeX, homeY);}onImpliedCommand(COMMAND_END);onImpliedCommand(COMMAND_STOP_SPINDLE);writeBlock(mFormat.format(30));}",
	"onTerminate": "function onTerminate() {}",
	"onPower": "function onPower(active) {}",
	"onSpindleSpeed": "function onSpindleSpeed(spindleSpeed) {writeBlock(sOutput.format(spindleSpeed));}",
	"onRadiusCompensation": "function onRadiusCompensation() {pendingRadiusCompensation = radiusCompensation;}",
	"onRewindMachine": "function onRewindMachine(a, b, c) {warning(localize(\"Rewind of machine is required for simultaneous multi-axis toolpath.\"));onComment(localize(\"Rewind of machine axes\"));}",
	"onCoolant": "function onCoolant(mode) {}",
	"isWellKnownCycle": "function isWellKnownCycle() {switch (cycleType) {case \"drilling\":case \"counter-boring\":case \"chip-breaking\":case \"deep-drilling\":case \"break-through-drilling\":case \"gun-drilling\":case \"tapping\":case \"left-tapping\":case \"right-tapping\":case \"tapping-with-chip-breaking\":case \"left-tapping-with-chip-breaking\":case \"right-tapping-with-chip-breaking\":case \"reaming\":case \"boring\":case \"stop-boring\":case \"fine-boring\":case \"back-boring\":case \"manual-boring\":case \"bore-milling\":case \"thread-milling\":case \"circular-pocket-milling\":case \"probe\":case \"thread-turning\":case \"stock-transfer\":return true;default:return false;}}",
	"onDeprecated": "function onDeprecated() {if (abortOnDeprecation) {error(localize(\"Post processing using a deprecated version of the post processor.\"));} else {warning(\"Post processing using a deprecated version of the post processor.\");log(\"Please download an updated version of Autodesk CAM Post Processor from http://cam.autodesk.com.\");openUrl(\"http://cam.autodesk.com\");}}",
	"initialize": "function initialize() {if (version != \"1.0\") {error(localize(\"Post configuration is not compatible with this version of the post processor.\"));return false;}var requiredCertificationLevel = 2;if (certificationLevel < requiredCertificationLevel) {warning(localize(\"The post configuration has been not been certified for use with this version of the post processor. The post configuration has to be re-certified.\"));log(subst(localize(\"The post configuration has been certified for level %1 but requires level %2.\"), certificationLevel, requiredCertificationLevel));}if (revision < minimumRevision) {error(subst(localize(\"The post configuration requires revision %1 or later of the post processor which has revision %2.\"), minimumRevision, revision));return false;}if (preventPost) {error(localize(\"Post processing has been manually disabled using the 'preventPost' property.\"));return false;}if (deprecated) {onDeprecated();}return true;}",
	"onCycle": "function onCycle() {writeBlock(gPlaneModal.format(17));}",
	"onCyclePoint": "function onCyclePoint(x, y, z) {if (isFirstCyclePoint()) {repositionToCycleClearance(cycle, x, y, z);var F = cycle.feedrate;var P = cycle.dwell == 0 ? 0 : cycle.dwell;switch (cycleType) {case \"drilling\":writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(81), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));break;case \"counter-boring\":if (P > 0) {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(82), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), feedOutput.format(F));} else {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(81), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));}break;case \"chip-breaking\":if (P > 0) {expandCyclePoint(x, y, z);} else {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(73), getCommonCycle(x, y, z, cycle.retract), \"Q\" + xyzFormat.format(cycle.incrementalDepth), feedOutput.format(F));}break;case \"deep-drilling\":if (P > 0) {expandCyclePoint(x, y, z);} else {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(83), getCommonCycle(x, y, z, cycle.retract), \"Q\" + xyzFormat.format(cycle.incrementalDepth), feedOutput.format(F));}break;case \"tapping\":if (tool.type == TOOL_TAP_LEFT_HAND) {expandCyclePoint(x, y, z);} else {if (!F) {F = tool.getTappingFeedrate();}writeBlock(mFormat.format(29), sOutput.format(tool.spindleRPM));writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(84), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));}break;case \"left-tapping\":expandCyclePoint(x, y, z);break;case \"right-tapping\":if (!F) {F = tool.getTappingFeedrate();}writeBlock(mFormat.format(29), sOutput.format(tool.spindleRPM));writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(84), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));break;case \"fine-boring\":writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(76), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), \"Q\" + xyzFormat.format(cycle.shift), feedOutput.format(F));break;case \"back-boring\":var dx = gPlaneModal.getCurrent() == 19 ? cycle.backBoreDistance : 0;var dy = gPlaneModal.getCurrent() == 18 ? cycle.backBoreDistance : 0;var dz = gPlaneModal.getCurrent() == 17 ? cycle.backBoreDistance : 0;writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(87), getCommonCycle(x - dx, y - dy, z - dz, cycle.bottom), \"I\" + xyzFormat.format(cycle.shift), \"J\" + xyzFormat.format(0), \"P\" + secFormat.format(P), feedOutput.format(F));break;case \"reaming\":if (P > 0) {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(89), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), feedOutput.format(F));} else {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(85), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));}break;case \"stop-boring\":writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(86), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), feedOutput.format(F));break;case \"manual-boring\":writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(88), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), feedOutput.format(F));break;case \"boring\":if (P > 0) {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(89), getCommonCycle(x, y, z, cycle.retract), \"P\" + secFormat.format(P), feedOutput.format(F));} else {writeBlock(gRetractModal.format(98), gAbsIncModal.format(90), gCycleModal.format(85), getCommonCycle(x, y, z, cycle.retract), feedOutput.format(F));}break;default:expandCyclePoint(x, y, z);}} else {if (cycleExpanded) {expandCyclePoint(x, y, z);} else {writeBlock(xOutput.format(x), yOutput.format(y));}}}",
	"onCycleEnd": "function onCycleEnd() {if (!cycleExpanded) {writeBlock(gCycleModal.format(80));zOutput.reset();}}",
	"onParameter": "function onParameter(name, value) {if (name == \"action\") {onAction(value);} else {return;}}",
	"onPassThrough": "function onPassThrough(value) {}",
	"onComment": "function onComment(message) {var comments = String(message).split(\";\");for (comment in comments) {writeComment(comments[comment]);}}",
	"onMachiningDistance": "function onMachiningDistance() {}",
	"onRapid": "function onRapid(_x, _y, _z) {writeln(\"onRapid(\" + _x + \", \" + _y + \", \" + _z + \") was called)\");reportPosition();var x = xOutput.format(_x);var y = yOutput.format(_y);var z = zOutput.format(_z);if (x || y || z) {if (pendingRadiusCompensation >= 0) {error(localize(\"Radius compensation mode cannot be changed at rapid traversal.\"));return;}writeBlock(gMotionModal.format(0), x, y, z);feedOutput.reset();}}",
	"onLinear": "function onLinear(_x, _y, _z, feed) {writeln(\"onLinear(\" + _x + \", \" + _y + \", \" + _z + \", \" + feed + \") was called)\");reportPosition();var x = xOutput.format(_x);var y = yOutput.format(_y);var z = zOutput.format(_z);var f = feedOutput.format(feed);if (x || y || z) {if (pendingRadiusCompensation >= 0) {pendingRadiusCompensation = -1;writeBlock(gPlaneModal.format(17));switch (radiusCompensation) {case RADIUS_COMPENSATION_LEFT:pOutput.reset();writeBlock(gMotionModal.format(1), pOutput.format(tool.diameter), gFormat.format(41), x, y, z, f);break;case RADIUS_COMPENSATION_RIGHT:pOutput.reset();writeBlock(gMotionModal.format(1), pOutput.format(tool.diameter), gFormat.format(42), x, y, z, f);break;default:writeBlock(gMotionModal.format(1), gFormat.format(40), x, y, z, f);}} else {writeBlock(gMotionModal.format(1), x, y, z, f);}} else if (f) {if (getNextRecord().isMotion()) {feedOutput.reset();} else {writeBlock(gMotionModal.format(1), f);}}}",
	"onRapid5D": "function onRapid5D(_x, _y, _z, _a, _b, _c) {writeln(\"onRapid5D(\" + _x + \", \" + _y + \", \" + _z + \", \" + _a + \", \" + _b + \", \" + _c + \") was called)\");reportPosition();if (pendingRadiusCompensation >= 0) {error(localize(\"Radius compensation mode cannot be changed at rapid traversal.\"));return;}var x = xOutput.format(_x);var y = yOutput.format(_y);var z = zOutput.format(_z);var a = aOutput.format(_a);var b = bOutput.format(_b);var c = cOutput.format(_c);writeBlock(gMotionModal.format(0), x, y, z, a, b, c, \"(\" + movementToString(movement) + \")\");feedOutput.reset();}",
	"onLinear5D": "function onLinear5D(_x, _y, _z, _a, _b, _c, feed) {writeln(\"onLinear5D(\" + _x + \", \" + _y + \", \" + _z + \", \" + _a + \", \" + _b + \", \" + _c + \", \" + feed + \") was called)\");reportPosition();if (pendingRadiusCompensation >= 0) {error(localize(\"Radius compensation cannot be activated/deactivated for 5-axis move.\"));return;}var x = xOutput.format(_x);var y = yOutput.format(_y);var z = zOutput.format(_z);var a = aOutput.format(_a);var b = bOutput.format(_b);var c = cOutput.format(_c);var f = feedOutput.format(feed);if (x || y || z || a || b || c) {writeBlock(gMotionModal.format(1), x, y, z, a, b, c, f, \"(\" + movementToString(movement) + \")\");} else if (f) {if (getNextRecord().isMotion()) {feedOutput.reset();} else {writeBlock(gMotionModal.format(1), f, \"(\" + movementToString(movement) + \")\");}}}",
	"onCircular": "function onCircular(clockwise, cx, cy, cz, x, y, z, feed) {if (pendingRadiusCompensation >= 0) {error(localize(\"Radius compensation cannot be activated/deactivated for a circular move.\"));return;}var start = getCurrentPosition();if (isFullCircle()) {if (properties.useRadius || isHelical()) {linearize(tolerance);return;}switch (getCircularPlane()) {case PLANE_XY:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(17), gMotionModal.format(clockwise ? 2 : 3), iOutput.format(cx - start.x, 0), jOutput.format(cy - start.y, 0), feedOutput.format(feed));break;case PLANE_ZX:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(18), gMotionModal.format(clockwise ? 2 : 3), iOutput.format(cx - start.x, 0), kOutput.format(cz - start.z, 0), feedOutput.format(feed));break;case PLANE_YZ:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(19), gMotionModal.format(clockwise ? 2 : 3), jOutput.format(cy - start.y, 0), kOutput.format(cz - start.z, 0), feedOutput.format(feed));break;default:linearize(tolerance);}} else if (!properties.useRadius) {switch (getCircularPlane()) {case PLANE_XY:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(17), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), iOutput.format(cx - start.x, 0), jOutput.format(cy - start.y, 0), feedOutput.format(feed));break;case PLANE_ZX:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(18), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), iOutput.format(cx - start.x, 0), kOutput.format(cz - start.z, 0), feedOutput.format(feed));break;case PLANE_YZ:writeBlock(gAbsIncModal.format(90), gPlaneModal.format(19), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), jOutput.format(cy - start.y, 0), kOutput.format(cz - start.z, 0), feedOutput.format(feed));break;default:linearize(tolerance);}} else {var r = getCircularRadius();if (toDeg(getCircularSweep()) > 180.000000001) {r = - r;}switch (getCircularPlane()) {case PLANE_XY:writeBlock(gPlaneModal.format(17), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), \"R\" + rFormat.format(r), feedOutput.format(feed));break;case PLANE_ZX:writeBlock(gPlaneModal.format(18), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), \"R\" + rFormat.format(r), feedOutput.format(feed));break;case PLANE_YZ:writeBlock(gPlaneModal.format(19), gMotionModal.format(clockwise ? 2 : 3), xOutput.format(x), yOutput.format(y), zOutput.format(z), \"R\" + rFormat.format(r), feedOutput.format(feed));break;default:linearize(tolerance);}}}",
	"onSpline": "function onSpline() {linearize(tolerance);}",
	"onSisterTooling": "function onSisterTooling() {}",
	"onDwell": "function onDwell(seconds) {if (seconds > 99999.999) {warning(localize(\"Dwelling time is out of range.\"));}if (properties.dwellInSeconds) {writeBlock(gFormat.format(4), \"P\" + secFormat.format(seconds));} else {milliseconds = clamp(1, seconds * 1000, 99999999);writeBlock(gFormat.format(4), \"P\" + milliFormat.format(milliseconds));}}",
	"onCommand": "function onCommand(command) {switch (command) {case COMMAND_START_SPINDLE:onCommand(tool.clockwise ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);return;case COMMAND_LOCK_MULTI_AXIS:return;case COMMAND_UNLOCK_MULTI_AXIS:return;case COMMAND_BREAK_CONTROL:return;case COMMAND_TOOL_MEASURE:return;default:;}var stringId = getCommandStringId(command);var mcode = mapCommand[stringId];if (mcode != undefined) {writeBlock(mFormat.format(mcode));} else {onUnsupportedCommand(command);}}",
	"onCommandDefaultHandler": "function onCommandDefaultHandler(command) {switch (command) {case COMMAND_START_SPINDLE:onCommand(tool.clockwise ? COMMAND_SPINDLE_CLOCKWISE : COMMAND_SPINDLE_COUNTERCLOCKWISE);return;case COMMAND_LOCK_MULTI_AXIS:return;case COMMAND_UNLOCK_MULTI_AXIS:return;case COMMAND_EXACT_STOP:return;case COMMAND_START_CHIP_TRANSPORT:return;case COMMAND_STOP_CHIP_TRANSPORT:return;case COMMAND_OPEN_DOOR:return;case COMMAND_CLOSE_DOOR:return;case COMMAND_BREAK_CONTROL:return;case COMMAND_TOOL_MEASURE:return;case COMMAND_CALIBRATE:return;case COMMAND_VERIFY:return;case COMMAND_CLEAN:return;case COMMAND_ALARM:return;case COMMAND_ALERT:return;case COMMAND_POWER_ON:return;case COMMAND_POWER_OFF:return;default:;}onUnsupportedCommand(command);}",
	"getCurrentNCLocation": "function getCurrentNCLocation() {var recordId = getCurrentRecordId();var sectionId = getCurrentSectionId();text = \"At location:\" + EOL;if (sectionId >= 0) {if (hasParameter(\"operation-comment\")) {var comment = getParameter(\"operation-comment\");text += \"  Operation: \" + comment + EOL;}text += \"  Section: \" + sectionId + \"/\" + getNumberOfSections() + EOL;var section = getSection(sectionId);text += \"  Tool: \" + section.getTool().number + EOL;}if (recordId < 0) {text += \"  Record: \" + \"INITIAL\" + EOL;} else if (recordId >= getNumberOfRecords()) {text += \"  Record: \" + \"FINAL\" + EOL;} else {text += \"  Record: \" + recordId + \"/\" + getNumberOfRecords() + EOL;}if (recordId >= 0 && recordId < getNumberOfRecords()) {var record = getRecord(recordId);var type;switch (record.getType()) {case RECORD_INVALID:type = \"Invalid\";break;case RECORD_TOOL_CHANGE:type = \"Tool change\";break;case RECORD_WELL_KNOWN_COMMAND:type = \"Command\";break;case RECORD_MACHINE_COMMAND:type = \"Machine command\";break;case RECORD_SPINDLE_SPEED:type = \"Spindle speed\";break;case RECORD_COOLANT:type = \"Coolant\";break;case RECORD_PARAMETER:type = \"Parameter\";break;case RECORD_LINEAR:type = \"Linear\";break;case RECORD_LINEAR_5D:type = \"Linear multi-axis\";break;case RECORD_CIRCULAR:type = \"Circular\";break;case RECORD_SPLINE:type = \"Spline\";break;case RECORD_DWELL:type = \"Dwell\";break;case RECORD_CYCLE:type = \"Start of cycle\";break;case RECORD_CYCLE_OFF:type = \"End of cycle\";break;case RECORD_COMMENT:type = \"Comment\";break;case RECORD_WIDE_COMMENT:type = \"Wide comment\";break;case RECORD_PASS_THROUGH:type = \"Pass through\";break;case RECORD_OPERATION:type = \"Start of section\";break;case RECORD_OPERATION_END:type = \"End of section\";break;default:type = record.getType();}text += \"  Type: \" + type + EOL;}return text;}",
	"onUnsupportedCoolant": "function onUnsupportedCoolant(coolant) {switch (coolant) {case COOLANT_OFF:error(localize(\"Unsupported 'off' coolant.\"));break;case COOLANT_FLOOD:error(localize(\"Unsupported 'flood' coolant.\"));break;case COOLANT_MIST:error(localize(\"Unsupported 'mist' coolant.\"));break;case COOLANT_THROUGH_TOOL:error(localize(\"Unsupported 'through tool' coolant.\"));break;case COOLANT_AIR:error(localize(\"Unsupported 'air' coolant.\"));break;case COOLANT_AIR_THROUGH_TOOL:error(localize(\"Unsupported 'air through tool' coolant.\"));break;case COOLANT_SUCTION:error(localize(\"Unsupported 'suction' coolant.\"));break;case COOLANT_FLOOD_MIST:error(localize(\"Unsupported 'flood and mist' coolant.\"));break;case COOLANT_FLOOD_THROUGH_TOOL:error(localize(\"Unsupported 'flood and through tool' coolant.\"));break;default:error(\"Unsupported coolant \" + coolant + \".\");}}",
	"canIgnoreCommand": "function canIgnoreCommand(command) {switch (command) {case COMMAND_START_CHIP_TRANSPORT:case COMMAND_STOP_CHIP_TRANSPORT:case COMMAND_OPEN_DOOR:case COMMAND_CLOSE_DOOR:case COMMAND_LOCK_MULTI_AXIS:case COMMAND_UNLOCK_MULTI_AXIS:case COMMAND_BREAK_CONTROL:case COMMAND_TOOL_MEASURE:case COMMAND_CALIBRATE:case COMMAND_VERIFY:case COMMAND_CLEAN:case COMMAND_ALARM:case COMMAND_ALERT:case COMMAND_CHANGE_PALLET:case COMMAND_POWER_ON:case COMMAND_POWER_OFF:return true;default:;}return false;}",
	"onUnsupportedCommand": "function onUnsupportedCommand(command) {switch (command) {case COMMAND_STOP:error(localize(\"Unsupported stop program command.\"));break;case COMMAND_STOP_SPINDLE:error(localize(\"Unsupported spindle stop command.\"));break;case COMMAND_START_SPINDLE:error(localize(\"Unsupported spindle start command.\"));break;case COMMAND_ORIENTATE_SPINDLE:error(localize(\"Unsupported spindle orientation command.\"));break;case COMMAND_SPINDLE_CLOCKWISE:error(localize(\"Unsupported spindle clockwise direction command.\"));break;case COMMAND_SPINDLE_COUNTERCLOCKWISE:error(localize(\"Unsupported spindle counterclockwise direction command.\"));break;case COMMAND_ACTIVATE_SPEED_FEED_SYNCHRONIZATION:error(localize(\"Unsupported speed-feed synchronization activation command.\"));break;case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHRONIZATION:error(localize(\"Unsupported speed-feed synchronization deactivation command.\"));break;case COMMAND_ACTIVATE_SPEED_FEED_SYNCHORNIZATION:error(localize(\"Unsupported speed-feed synchronization activation command.\"));break;case COMMAND_DEACTIVATE_SPEED_FEED_SYNCHORNIZATION:error(localize(\"Unsupported speed-feed synchronization deactivation command.\"));break;case COMMAND_LOCK_MULTI_AXIS:error(localize(\"Unsupported lock multi-axis command.\"));break;case COMMAND_UNLOCK_MULTI_AXIS:error(localize(\"Unsupported unlock multi-axis command.\"));break;case COMMAND_EXACT_STOP:error(localize(\"Unsupported exact stop command.\"));break;case COMMAND_START_CHIP_TRANSPORT:error(localize(\"Unsupported start chip transport command.\"));break;case COMMAND_STOP_CHIP_TRANSPORT:error(localize(\"Unsupported stop chip transport command.\"));break;case COMMAND_OPEN_DOOR:error(localize(\"Unsupported open door command.\"));break;case COMMAND_CLOSE_DOOR:error(localize(\"Unsupported close door command.\"));break;case COMMAND_BREAK_CONTROL:error(localize(\"Unsupported break control command.\"));break;case COMMAND_TOOL_MEASURE:error(localize(\"Unsupported tool measure command.\"));break;case COMMAND_CALIBRATE:error(localize(\"Unsupported calibrate command.\"));break;case COMMAND_VERIFY:error(localize(\"Unsupported verify command.\"));break;case COMMAND_CLEAN:error(localize(\"Unsupported clean command.\"));break;case COMMAND_POWER_ON:error(localize(\"Unsupported power-on command.\"));break;case COMMAND_POWER_OFF:error(localize(\"Unsupported power-off command.\"));break;default:error(\"Unsupported command \" + command + \".\");}}",
	"onOrientateSpindle": "function onOrientateSpindle(angle) {error(\"Function onOrientateSpindle() has not been implemented.\");}",
	"onMachineCommand": "function onMachineCommand(command) {if (debugMode) {writeComment(\"onMachineCommand(): unhandled machine command: \" + command);}}",
	"onSection": "function onSection() {writeln(\"currentSection.workPlane: \" + currentSection.workPlane);writeln(\"currentSection.getWorkPlane(): \" + currentSection.getWorkPlane());var insertToolCall = isFirstSection() || currentSection.getForceToolChange && currentSection.getForceToolChange() || tool.number != getPreviousSection().getTool().number;var retracted = false;var newWorkOffset = isFirstSection() || getPreviousSection().workOffset != currentSection.workOffset;var newWorkPlane = isFirstSection() || !isSameDirection(getPreviousSection().getGlobalFinalToolAxis(), currentSection.getGlobalInitialToolAxis());if (insertToolCall || newWorkOffset || newWorkPlane) {if (properties.useG28) {retracted = true;writeBlock(gFormat.format(28), gAbsIncModal.format(91), \"Z\" + xyzFormat.format(0));writeBlock(gAbsIncModal.format(90));zOutput.reset();}}writeln(\"\");if (hasParameter(\"operation-comment\")) {var comment = getParameter(\"operation-comment\");if (comment) {writeComment(comment);}}if (insertToolCall) {forceWorkPlane();onCommand(COMMAND_STOP_SPINDLE);onCommand(COMMAND_COOLANT_OFF);if (!isFirstSection() && properties.optionalStop) {onCommand(COMMAND_OPTIONAL_STOP);}if (tool.number > 256) {warning(localize(\"Tool number exceeds maximum value.\"));}if (properties.useM6) {writeBlock(\"T\" + toolFormat.format(tool.number), mFormat.format(6));} else {writeBlock(\"T\" + toolFormat.format(tool.number));}if (tool.comment) {writeComment(tool.comment);}var showToolZMin = false;if (showToolZMin) {if (is3D()) {var numberOfSections = getNumberOfSections();var zRange = currentSection.getGlobalZRange();var number = tool.number;for (var i = currentSection.getId() + 1; i < numberOfSections; ++i) {var section = getSection(i);if (section.getTool().number != number) {break;}zRange.expandToRange(section.getGlobalZRange());}writeComment(localize(\"ZMIN\") + \"=\" + zRange.getMinimum());}}if (properties.preloadTool && properties.useM6) {var nextTool = getNextTool(tool.number);if (nextTool) {writeBlock(\"T\" + toolFormat.format(nextTool.number));} else {var section = getSection(0);var firstToolNumber = section.getTool().number;if (tool.number != firstToolNumber) {writeBlock(\"T\" + toolFormat.format(firstToolNumber));}}}}if (insertToolCall || isFirstSection() || rpmFormat.areDifferent(tool.spindleRPM, sOutput.getCurrent()) || tool.clockwise != getPreviousSection().getTool().clockwise) {if (tool.spindleRPM < 1) {error(localize(\"Spindle speed out of range.\"));return;}if (tool.spindleRPM > 99999) {warning(localize(\"Spindle speed exceeds maximum value.\"));}writeBlock(sOutput.format(tool.spindleRPM), mFormat.format(tool.clockwise ? 3 : 4));}var workOffset = currentSection.workOffset;if (workOffset == 0) {warningOnce(localize(\"Work offset has not been specified. Using G54 as WCS.\"), WARNING_WORK_OFFSET);workOffset = 1;}if (workOffset > 0) {if (workOffset > 6) {var p = workOffset;if (p > 254) {error(localize(\"Work offset out of range.\"));} else {if (workOffset != currentWorkOffset) {writeBlock(gFormat.format(59), \"P\" + p);currentWorkOffset = workOffset;}}} else {if (workOffset != currentWorkOffset) {writeBlock(gFormat.format(53 + workOffset));currentWorkOffset = workOffset;writeBlock(\"M201\");}}}forceXYZ();if (machineConfiguration.isMultiAxisConfiguration()) {var abc = new Vector(0, 0, 0);if (currentSection.isMultiAxis()) {forceWorkPlane();cancelTransformation();} else {abc = getWorkPlaneMachineABC(currentSection.workPlane);}setWorkPlane(abc);} else {var remaining = currentSection.workPlane;if (!isSameDirection(remaining.forward, new Vector(0, 0, 1))) {error(localize(\"Tool orientation is not supported.\"));return;}setRotation(remaining);}var c = mapCoolantTable.lookup(tool.coolant);if (c) {writeBlock(mFormat.format(c));} else {warning(localize(\"Coolant not supported.\"));}forceAny();gMotionModal.reset();var initialPosition = getFramePosition(currentSection.getInitialPosition());if (!retracted) {writeBlock(gMotionModal.format(0), zOutput.format(initialPosition.z));}if (insertToolCall || retracted) {var lengthOffset = tool.lengthOffset;if (lengthOffset > 256) {error(localize(\"Length offset out of range.\"));return;}gMotionModal.reset();writeBlock(gPlaneModal.format(17));if (!machineConfiguration.isHeadConfiguration()) {writeBlock(gAbsIncModal.format(90), gMotionModal.format(0), xOutput.format(initialPosition.x), yOutput.format(initialPosition.y));writeBlock(gMotionModal.format(0), gFormat.format(43), zOutput.format(initialPosition.z), hFormat.format(lengthOffset));} else {writeBlock(gAbsIncModal.format(90), gMotionModal.format(0), gFormat.format(43), xOutput.format(initialPosition.x), yOutput.format(initialPosition.y), zOutput.format(initialPosition.z), hFormat.format(lengthOffset));}} else {writeBlock(gAbsIncModal.format(90), gMotionModal.format(0), xOutput.format(initialPosition.x), yOutput.format(initialPosition.y));}}",
	"onSectionEnd": "function onSectionEnd() {writeBlock(gPlaneModal.format(17));if (getCurrentSectionId() + 1 >= getNumberOfSections() || tool.number != getNextSection().getTool().number) {onCommand(COMMAND_BREAK_CONTROL);}forceAny();}",
	"isAlpha": "function isAlpha(ch) {return ch >= \"a\" && ch <= \"z\" || ch >= \"A\" && ch <= \"Z\";}",
	"isAlphaNum": "function isAlphaNum(ch) {return ch >= \"a\" && ch <= \"z\" || ch >= \"A\" && ch <= \"Z\" || ch >= \"0\" || ch <= \"9\";}",
	"getFolderPath": "function getFolderPath(path) {log(\"getFolderPath() has been deprecated. Use FileSystem.getFolderPath() instead.\");var i = path.lastIndexOf(PATH_SEPARATOR);if (i >= 0) {return path.substr(0, i);}return path;}",
	"replaceExtension": "function replaceExtension(path, extension) {log(\"replaceExtension() has been deprecated. Use FileSystem.replaceExtension() instead.\");var filename = path;var i = filename.lastIndexOf(PATH_SEPARATOR);if (i >= 0) {filename = path.substr(i + 1);}var j = filename.lastIndexOf(\".\");if (j >= 0) {filename = filename.substr(0, j);}return (i >= 0 ? path.substr(0, i + 1) : \"\") + filename + extension;}",
	"makeOutputPath": "function makeOutputPath(subpath) {var path = FileSystem.getCombinedPath(FileSystem.getFolderPath(getOutputPath()), subpath);return path;}",
	"createAxis": "function createAxis(specifiers) {validateInternal(specifiers == undefined || typeof specifiers == \"object\", \"Invalid specifiers.\");var actuator;var table;var axis;var offset;var coordinate;var cyclic;var range;var preference;var resolution;var maximumFeed;for (var name in specifiers) {switch (name) {case \"actuator\":actuator = specifiers[name];break;case \"axis\":axis = specifiers[name];break;case \"offset\":offset = specifiers[name];break;case \"coordinate\":coordinate = specifiers[name];break;case \"cyclic\":cyclic = specifiers[name];break;case \"range\":range = specifiers[name];break;case \"table\":table = specifiers[name];break;case \"preference\":preference = specifiers[name];break;case \"resolution\":resolution = specifiers[name];break;case \"maximumFeed\":maximumFeed = specifiers[name];break;default:warning(subst(localize(\"Unsupported machine axis specifier '%1'.\"), name));}}if (!(preference == undefined || preference == -1 || preference == 0 || preference == 1)) {throw \"Invalid angle preference for axis construction.\";}if (resolution != undefined) {if (resolution < 0) {throw \"Invalid axis resolution.\";}}if (maximumFeed != undefined) {if (maximumFeed < 0) {throw \"Invalid axis feed.\";}}if (coordinate == undefined) {throw \"Coordinate is not specified for axis construction.\";}if (coordinate == \"X\" || coordinate == \"x\") {coordinate = 0;} else if (coordinate == \"Y\" || coordinate == \"y\") {coordinate = 1;} else if (coordinate == \"Z\" || coordinate == \"z\") {coordinate = 2;}if (axis == undefined) {throw \"Axis vector is not specified for axis construction.\";}if (axis.length != 3) {throw \"Invalid axis vector for axis construction.\";}var _axis = new Vector(axis[0], axis[1], axis[2]);if (_axis.length < 0.001) {throw \"Invalid axis vector for axis construction.\";}var _offset = new Vector(0, 0, 0);if (offset != undefined) {if (offset.length != 3) {throw \"Invalid offset for axis construction.\";}_offset = new Vector(offset[0], offset[1], offset[2]);}var result;if (range) {var _range;if (typeof range == \"number\") {_range = new Range(toRad(range), toRad(range));} else {if (typeof range != \"object\") {throw \"Invalid range for axis construction.\";}if (range.length != 2) {throw \"Invalid range for axis construction.\";}_range = new Range(toRad(range[0]), toRad(range[1]));}result = new Axis(table == true, _axis, _offset, coordinate, _range);if (cyclic != undefined) {result.setCyclic(cyclic);}} else {result = new Axis(table == true, _axis, _offset, coordinate);}if (actuator == undefined || actuator == \"rotational\") {result.setActuator(1);} else if (actuator == \"linear\") {result.setActuator(0);} else {throw \"Invalid actuator.\";}if (preference != undefined) {result.setPreference(preference);}if (resolution != undefined) {if (result.getActuator() == 1) {result.setResolution(toRad(resolution));} else {result.setResolution(resolution);}}if (maximumFeed != undefined) {result.setMaximumFeed(maximumFeed);}return result;}",
	"CoolantState": "function CoolantState(specifiers) {for (var name in specifiers) {switch (name) {case \"strict\":this.strict = !!specifiers[name];break;case \"flood\":case \"mist\":case \"through_tool\":case \"air\":case \"air_through_tool\":case \"suction\":case \"flood_mist\":case \"flood_through_tool\":var values = specifiers[name];this[name] = {on: values.on, off: values.off};break;default:warning(subst(localize(\"Unsupported CoolantState specifier '%1'.\"), name));}}this.currentCoolant = COOLANT_OFF;this.getOnOff = function (coolant) {switch (coolant) {case COOLANT_FLOOD:return this.flood;case COOLANT_MIST:return this.mist;case COOLANT_THROUGH_TOOL:return this.through_tool;case COOLANT_AIR:return this.air;case COOLANT_AIR_THROUGH_TOOL:return this.air_through_tool;case COOLANT_SUCTION:return this.suction;case COOLANT_FLOOD_MIST:return this.flood_mist;case COOLANT_FLOOD_THROUGH_TOOL:return this.flood_through_tool;default:error(\"Invalid coolant state.\");return undefined;}};this.update = function (coolant) {if (coolant == this.currentCoolant) {return \"\";}if (coolant == COOLANT_OFF) {var onoff = this.getOnOff(this.currentCoolant);if (onoff == undefined) {error(\"Invalid coolant state.\");return undefined;}var result = onoff.off;if (result == undefined) {var description;switch (coolant) {case COOLANT_FLOOD:description = localize(\"Coolant flood cannot be disabled.\");break;case COOLANT_MIST:description = localize(\"Coolant mist cannot be disabled.\");break;case COOLANT_THROUGH_TOOL:description = localize(\"Coolant through tool cannot be disabled.\");break;case COOLANT_AIR:description = localize(\"Coolant air cannot be disabled.\");break;case COOLANT_AIR_THROUGH_TOOL:description = localize(\"Coolant air through tool cannot be disabled.\");break;case COOLANT_SUCTION:description = localize(\"Coolant suction cannot be disabled.\");break;case COOLANT_FLOOD_MIST:description = localize(\"Coolant flood and mist cannot be disabled.\");break;case COOLANT_FLOOD_THROUGH_TOOL:description = localize(\"Coolant flood and through tool cannot be disabled.\");break;default:description = localize(\"Coolant cannot be disabled.\");}if (this.strict) {error(description);return undefined;} else {warning(description);}}this.currentCoolant = COOLANT_OFF;return [result];}var onoff = this.getOnOff(coolant);var result;if (this.currentCoolant != COOLANT_OFF) {var _onoff = this.getOnOff(this.currentCoolant);if (_onoff == undefined) {error(\"Invalid coolant state.\");return undefined;}if (_onoff.on == onoff.on) {return \"\";}result = this.update(COOLANT_OFF);}if (onoff == undefined || onoff.on == undefined) {var description;switch (coolant) {case COOLANT_FLOOD:description = localize(\"Coolant flood is not supported.\");break;case COOLANT_MIST:description = localize(\"Coolant mist is not supported.\");break;case COOLANT_THROUGH_TOOL:description = localize(\"Coolant through tool is not supported.\");break;case COOLANT_AIR:description = localize(\"Coolant air is not supported.\");break;case COOLANT_AIR_THROUGH_TOOL:description = localize(\"Coolant air through tool is not supported.\");break;case COOLANT_SUCTION:description = localize(\"Coolant suction is not supported.\");break;case COOLANT_FLOOD_MIST:description = localize(\"Coolant flood and mist is not supported.\");break;case COOLANT_FLOOD_THROUGH_TOOL:description = localize(\"Coolant flood and through tool is not supported.\");break;default:description = localize(\"Coolant is not supported.\");}if (this.strict) {error(description);return undefined;} else {warning(description);}if (this.currentCoolant == COOLANT_OFF) {return result;}coolant = COOLANT_OFF;this.currentCoolant = coolant;return result;}this.currentCoolant = coolant;return result == undefined ? [onoff.on] : result.concat(onoff.on);};}",
	"range": "function range() {var first = 0;var end = 0;var step = 1;switch (arguments.length) {case 0:end = 0;break;case 1:end = arguments[0];break;case 2:first = arguments[0];end = arguments[1];break;case 3:first = arguments[0];end = arguments[1];step = arguments[2];break;default:throw new Error(\"Invalid arguments for range().\");}var result = [];if (step > 0) {for (var i = first; i < end; i += step) {result[i] = i;}} else {for (var i = first; i > end; i += step) {result[i] = i;}}return result;}",
	"__": "function __() {while (true) {}}",
	"onCorruption": "function onCorruption() {throw new Error(localize(\"The installation has been corrupted. Please reinstall and reactivate your license to correct the problem.\"));}",
	"interval": "function interval(from, to) {if (from > to) {throw new Error(\"Invalid interval.\");}return range(from, to + 1);}",
	"flatten": "function flatten(value) {var result = [];if (value == undefined) {return result;}if (value instanceof Array || value.length != undefined) {for (var i = 0; i < value.length; ++i) {var v = value[i];if (v == undefined) {} else if (v instanceof Array || v.length != undefined) {var f = flatten(v);for (var j = 0; j < f.length; ++j) {result.push(f[j]);}} else {result.push(v);}}} else {result = result.concat(value);}return result;}",
	"isSameDirection": "function isSameDirection(a, b) {return Vector.dot(a, b) > 0.9999999;}",
	"description": "\"This is the post-processor description. Lorem Ipsum dolorem sit amet. \"",
	"vendor": "\"Autoscan\"",
	"vendorUrl": "\"http://autoscaninc.com\"",
	"legal": "\"\"",
	"unit": "0",
	"programName": "\"paddle-byHsmWorks\"",
	"programComment": "\"\"",
	"programNameIsInteger": "false",
	"configurationType": "\"gcode\"",
	"debugMode": "false",
	"preventPost": "false",
	"filename": "\"\"",
	"extension": "\"nc\"",
	"mimetype": "\"text/plain\"",
	"keywords": "\"\"",
	"version": "\"1.0\"",
	"certificationLevel": "2",
	"minimumRevision": "1",
	"abortOnDeprecation": "true",
	"capabilities": "1",
	"tolerance": "0.002",
	"maximumSpindleSpeed": "1000000",
	"maximumFeedrate": "1000000",
	"minimumChordLength": "0.01",
	"minimumCircularRadius": "0.01",
	"maximumCircularRadius": "1000",
	"minimumCircularSweep": "0.00017453292519943296",
	"maximumCircularSweep": "3.141592653589793",
	"allowMachineChangeOnSection": "false",
	"allowHelicalMoves": "true",
	"allowSpiralMoves": "false",
	"allowOptionalCode": "false",
	"highFeedMapping": "0",
	"highFeedrate": "0",
	"properties": "{\"writeMachine\":true,\"writeTools\":true,\"useG28\":false,\"useM6\":false,\"preloadTool\":false,\"showSequenceNumbers\":false,\"sequenceNumberStart\":10,\"sequenceNumberIncrement\":5,\"optionalStop\":true,\"separateWordsWithSpace\":true,\"useRadius\":true,\"dwellInSeconds\":true,\"programComment\":\"\",\"programName\":\"paddle-byHsmWorks\",\"unit\":0}",
	"outputMachineABC": "true",
	"tool": "{}",
	"cycle": "{}",
	"cycleExpanded": "{}",
	"spindleAxis": "2",
	"feedrate": "0",
	"machineConfiguration": "{}",
	"machineParameters": "{\"spindleOrientation\":0,\"chipBreakingDistance\":0.004,\"drillingSafeDistance\":0.08}",
	"permittedCommentChars": "\" ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,=_-\"",
	"mapCoolantTable": "{\"values\":[9,8,7],\"value\":0,\"unchanged\":\"\",\"errorMessage\":\"Invalid coolant mode\"}",
	"nFormat": "{}",
	"gFormat": "{}",
	"mFormat": "{}",
	"hFormat": "{}",
	"pFormat": "{}",
	"xyzFormat": "{}",
	"rFormat": "{}",
	"abcFormat": "{}",
	"feedFormat": "{}",
	"toolFormat": "{}",
	"rpmFormat": "{}",
	"secFormat": "{}",
	"milliFormat": "{}",
	"taperFormat": "{}",
	"xOutput": "{}",
	"yOutput": "{}",
	"zOutput": "{}",
	"aOutput": "{}",
	"bOutput": "{}",
	"cOutput": "{}",
	"feedOutput": "{}",
	"sOutput": "{}",
	"pOutput": "{}",
	"iOutput": "{}",
	"jOutput": "{}",
	"kOutput": "{}",
	"gMotionModal": "{}",
	"gPlaneModal": "{}",
	"gAbsIncModal": "{}",
	"gFeedModeModal": "{}",
	"gUnitModal": "{}",
	"gCycleModal": "{}",
	"gRetractModal": "{}",
	"WARNING_WORK_OFFSET": "0",
	"movementToString": "function movementToString(movement) {switch (movement) {case MOVEMENT_RAPID:return \"MOVEMENT_RAPID\";break;case MOVEMENT_LEAD_IN:return \"MOVEMENT_LEAD_IN\";break;case MOVEMENT_CUTTING:return \"MOVEMENT_CUTTING\";break;case MOVEMENT_LEAD_OUT:return \"MOVEMENT_LEAD_OUT\";break;case MOVEMENT_LINK_TRANSITION:return \"MOVEMENT_LINK_TRANSITION\";break;case MOVEMENT_LINK_DIRECT:return \"MOVEMENT_LINK_DIRECT\";break;case MOVEMENT_RAMP_HELIX:return \"MOVEMENT_RAMP_HELIX\";break;case MOVEMENT_RAMP_PROFILE:return \"MOVEMENT_RAMP_PROFILE\";break;case MOVEMENT_RAMP_ZIG_ZAG:return \"MOVEMENT_RAMP_ZIG_ZAG\";break;case MOVEMENT_RAMP:return \"MOVEMENT_RAMP\";break;case MOVEMENT_PLUNGE:return \"MOVEMENT_PLUNGE\";break;case MOVEMENT_PREDRILL:return \"MOVEMENT_PREDRILL\";break;case MOVEMENT_EXTENDED:return \"MOVEMENT_EXTENDED\";break;case MOVEMENT_REDUCED:return \"MOVEMENT_REDUCED\";break;case MOVEMENT_FINISH_CUTTING:return \"MOVEMENT_FINISH_CUTTING\";break;case MOVEMENT_HIGH_FEED:return \"MOVEMENT_HIGH_FEED\";break;default:return \"unknown movement\";}return \"unknown movement\";}",
	"writeBlock": "function writeBlock() {if (properties.showSequenceNumbers) {writeWords2(nFormat.format(sequenceNumber % 100000), arguments);sequenceNumber += properties.sequenceNumberIncrement;} else {writeWords(arguments);}}",
	"writeComment": "function writeComment(text) {writeln(\"(\" + filterText(String(text).toUpperCase(), permittedCommentChars) + \")\");}",
	"getMethods": "function getMethods(obj) {var res = [];for (var m in obj) {if (typeof obj[m] == \"function\") {res.push(m);}}return res;}",
	"reconstruct": "function reconstruct(obj) {var res = {};for (var key in obj) {res[key] = \"FOOBAR\";if (typeof obj[key] == \"function\") {res[key] = obj[key].toSource();} else {res[key] = JSON.stringify(obj[key]);}}return res;}",
	"forceXYZ": "function forceXYZ() {xOutput.reset();yOutput.reset();zOutput.reset();}",
	"forceABC": "function forceABC() {aOutput.reset();bOutput.reset();cOutput.reset();}",
	"forceAny": "function forceAny() {forceXYZ();forceABC();feedOutput.reset();}",
	"forceWorkPlane": "function forceWorkPlane() {currentWorkPlaneABC = undefined;}",
	"setWorkPlane": "function setWorkPlane(abc) {writeln(\"setWorkPlane(\" + abc + \") was called.\");if (!machineConfiguration.isMultiAxisConfiguration()) {return;}if (!(currentWorkPlaneABC == undefined || abcFormat.areDifferent(abc.x, currentWorkPlaneABC.x) || abcFormat.areDifferent(abc.y, currentWorkPlaneABC.y) || abcFormat.areDifferent(abc.z, currentWorkPlaneABC.z))) {return;}onCommand(COMMAND_UNLOCK_MULTI_AXIS);writeBlock(gMotionModal.format(0), conditional(machineConfiguration.isMachineCoordinate(0), \"A\" + abcFormat.format(abc.x)), conditional(machineConfiguration.isMachineCoordinate(1), \"B\" + abcFormat.format(abc.y)), conditional(machineConfiguration.isMachineCoordinate(2), \"C\" + abcFormat.format(abc.z)));onCommand(COMMAND_LOCK_MULTI_AXIS);currentWorkPlaneABC = abc;}",
	"closestABC": "false",
	"getWorkPlaneMachineABC": "function getWorkPlaneMachineABC(workPlane) {var W = workPlane;var abc = machineConfiguration.getABC(W);if (closestABC) {if (currentMachineABC) {abc = machineConfiguration.remapToABC(abc, currentMachineABC);} else {abc = machineConfiguration.getPreferredABC(abc);}} else {abc = machineConfiguration.getPreferredABC(abc);}try {abc = machineConfiguration.remapABC(abc);currentMachineABC = abc;} catch (e) {error(localize(\"Machine angles not supported\") + \":\" + conditional(machineConfiguration.isMachineCoordinate(0), \" A\" + abcFormat.format(abc.x)) + conditional(machineConfiguration.isMachineCoordinate(1), \" B\" + abcFormat.format(abc.y)) + conditional(machineConfiguration.isMachineCoordinate(2), \" C\" + abcFormat.format(abc.z)));}var direction = machineConfiguration.getDirection(abc);if (!isSameDirection(direction, W.forward)) {error(localize(\"Orientation not supported.\"));}if (!machineConfiguration.isABCSupported(abc)) {error(localize(\"Work plane is not supported\") + \":\" + conditional(machineConfiguration.isMachineCoordinate(0), \" A\" + abcFormat.format(abc.x)) + conditional(machineConfiguration.isMachineCoordinate(1), \" B\" + abcFormat.format(abc.y)) + conditional(machineConfiguration.isMachineCoordinate(2), \" C\" + abcFormat.format(abc.z)));}var tcp = true;if (tcp) {setRotation(W);} else {var O = machineConfiguration.getOrientation(abc);var R = machineConfiguration.getRemainingOrientation(abc, W);setRotation(R);}return abc;}",
	"getCommonCycle": "function getCommonCycle(x, y, z, r) {forceXYZ();return [xOutput.format(x), yOutput.format(y), zOutput.format(z), \"R\" + xyzFormat.format(r)];}",
	"pendingRadiusCompensation": "-1",
	"reportPosition": "function reportPosition() {writeln(\"getTranslation():\" + getTranslation());try {writeln(\"getEnd(): \" + getEndPosition());} catch (e) {writeln(\"getEnd() failed\");}try {writeln(\"getDirection(): \" + getDirection());} catch (e) {writeln(\"getDirection() failed\");}writeln(\"getCurrentDirection(): \" + getCurrentDirection());}",
	"mapCommand": "{\"COMMAND_STOP\":0,\"COMMAND_OPTIONAL_STOP\":1,\"COMMAND_END\":2,\"COMMAND_SPINDLE_CLOCKWISE\":3,\"COMMAND_SPINDLE_COUNTERCLOCKWISE\":4,\"COMMAND_STOP_SPINDLE\":5,\"COMMAND_ORIENTATE_SPINDLE\":19,\"COMMAND_LOAD_TOOL\":6,\"COMMAND_COOLANT_ON\":8,\"COMMAND_COOLANT_OFF\":9}",
	"includeFile": "function includeFile(path) {writeln(\"(>>>>>>>>>>>>>>>>>  file to be included: \" + path + \")\");var absolutePath = FileSystem.getCombinedPath(FileSystem.getFolderPath(getOutputPath()), path);var fileExtension = FileSystem.getFilename(path).replace(FileSystem.replaceExtension(FileSystem.getFilename(path), \" \").slice(0, -1), \"\");var fileToBeIncludedVerbatim;var returnCode;switch (fileExtension.toLowerCase()) {case \"php\":if (!FileSystem.isFolder(FileSystem.getTemporaryFolder())) {FileSystem.makeFolder(FileSystem.getTemporaryFolder());}var tempFile = FileSystem.getTemporaryFile(\"\");returnCode = execute(\"cmd\", \"/c php \\\"\" + absolutePath + \"\\\" > \\\"\" + tempFile + \"\\\"\", false, \"\");fileToBeIncludedVerbatim = tempFile;break;default:fileToBeIncludedVerbatim = absolutePath;break;}var myTextFile = new TextFile(fileToBeIncludedVerbatim, false, \"ansi\");var lineCounter = 0;var line;while (!function () {try {line = myTextFile.readln();eof = false;} catch (error) {eof = true;}return eof;}()) {writeln(line);lineCounter++;}myTextFile.close();}",
	"steadyRest_engage": "function steadyRest_engage() {writeln(\"\");writeln(\"(>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<)\");writeln(\"(>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<)\");writeln(\"(MIKE, ENGAGE THE STEADY REST.  THEN PRESS 'RESUME')\");writeln(\"(>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<)\");writeln(\"(>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<)\");writeln(\"\");writeln(\"M0\");}",
	"onAction": "function onAction(value) {eval(value);}",
	"mapWorkOrigin": "true",
	"mapToWCS": "true",
	"milling": "true",
	"dogLeg": "0",
	"lineNumber": "0",
	"workpieceLower": "{}",
	"workpieceUpper": "{}",
	"end": "{}",
	"direction": "{}",
	"center": "{}",
	"normal": "{}",
	"plane": "-1",
	"radius": "0",
	"sweep": "0",
	"chordLength": "0",
	"fullCircle": "false",
	"helical": "false",
	"helicalOffset": "{}",
	"helicalDistance": "0",
	"movement": "0",
	"power": "false",
	"spindleSpeed": "0",
	"radiusCompensation": "0",
	"compensationOffset": "0"
}